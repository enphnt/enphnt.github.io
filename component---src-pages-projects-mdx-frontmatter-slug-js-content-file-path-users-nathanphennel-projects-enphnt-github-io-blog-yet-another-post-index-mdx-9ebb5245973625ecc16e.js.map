{"version":3,"file":"component---src-pages-projects-mdx-frontmatter-slug-js-content-file-path-users-nathanphennel-projects-enphnt-github-io-blog-yet-another-post-index-mdx-9ebb5245973625ecc16e.js","mappings":"6JAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,MACFC,EAAAA,EAAAA,MAAsBL,EAAMM,YAC/B,OAAOC,EAAAA,cAAoBN,EAAYG,EAAG,KAAM,mDAClD,CAKA,IAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOQ,QAASC,GAAaP,OAAOC,OAAO,CAAC,GAAGE,EAAAA,EAAAA,MAAsBL,EAAMM,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWT,EAAOO,EAAAA,cAAoBR,EAAmBC,IAAUD,EAAkBC,EAC9H,C,oJCNA,MAAMU,EAAWC,IAAsB,IAArB,KAACC,EAAI,SAAEC,GAAS,EAChC,MAAMC,GAAYC,EAAAA,EAAAA,GAASH,EAAKI,IAAIC,YAAYC,YAChD,OAAOX,EAAAA,cAAoB,MAAO,CAChCY,MAAO,CACLC,OAAQ,KAETb,EAAAA,cAAoBc,EAAAA,EAAQ,CAC7BC,UAAWV,EAAKI,IAAIC,YAAYM,OAC/BhB,EAAAA,cAAoB,IAAK,CAC1BiB,KAAM,aACL,wBAAyBjB,EAAAA,cAAoB,IAAK,KAAMK,EAAKI,IAAIC,YAAYQ,MAAOX,EAAYP,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBmB,EAAAA,EAAa,CAC5KC,MAAOb,EACPc,IAAKhB,EAAKI,IAAIC,YAAYY,iBACxBtB,EAAAA,cAAoB,IAAK,KAAM,gBAAiB,IAAKA,EAAAA,cAAoB,IAAK,CAChFiB,KAAMZ,EAAKI,IAAIC,YAAYa,wBAC1BlB,EAAKI,IAAIC,YAAYc,0BAA4B,KAAMlB,GAAU,EAoBzDmB,EAAO,IAAMzB,EAAAA,cAAoB0B,EAAAA,EAAK,CACjDV,MAAO,0BAGM,SAASW,EAAiBlC,GACvC,OAAOO,EAAAA,cAAoBG,EAAUV,EAAOO,EAAAA,cAAoB4B,EAAAA,EAAqBnC,GACvF,C,sECdO,MAAMoC,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiB/B,GAC/B,MAAMgC,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAf9B,EACFA,EAAWgC,GAGb,IAAIA,KAAsBhC,IAChC,CAACgC,EAAmBhC,GACzB,C","sources":["webpack://nathan-phennel-website/./blog/yet-another-post/index.mdx","webpack://nathan-phennel-website/./src/pages/projects/{mdx.frontmatter__slug}.js","webpack://nathan-phennel-website/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.p, null, \"Wow look at all this content. How do they do it?\");\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/nathanphennel/Projects/enphnt.github.io/blog/yet-another-post/index.mdx\";\nimport * as React from 'react';\nimport {graphql} from 'gatsby';\nimport {GatsbyImage, getImage} from 'gatsby-plugin-image';\nimport Layout from '../../components/layout';\nimport Seo from '../../components/seo';\nconst BlogPost = ({data, children}) => {\n  const heroImage = getImage(data.mdx.frontmatter.hero_image);\n  return React.createElement(\"div\", {\n    style: {\n      margin: 12\n    }\n  }, React.createElement(Layout, {\n    pageTitle: data.mdx.frontmatter.title\n  }, React.createElement(\"a\", {\n    href: \"/projects\"\n  }, \" ../Back to Projects\"), React.createElement(\"p\", null, data.mdx.frontmatter.date), heroImage ? React.createElement(React.Fragment, null, React.createElement(GatsbyImage, {\n    image: heroImage,\n    alt: data.mdx.frontmatter.hero_image_alt\n  }), React.createElement(\"p\", null, \"Photo Credit:\", \" \", React.createElement(\"a\", {\n    href: data.mdx.frontmatter.hero_image_credit_link\n  }, data.mdx.frontmatter.hero_image_credit_text))) : null, children));\n};\nexport const query = graphql`\n  query($id: String) {\n    mdx(id: {eq: $id}) {\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        hero_image_alt\n        hero_image_credit_link\n        hero_image_credit_text\n        hero_image {\n          childImageSharp {\n            gatsbyImageData\n          }\n        }\n      }\n    }\n  }\n`;\nexport const Head = () => React.createElement(Seo, {\n  title: \"Super Cool Blog Posts\"\n});\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","_provideComponents","components","React","wrapper","MDXLayout","BlogPost","_ref","data","children","heroImage","getImage","mdx","frontmatter","hero_image","style","margin","Layout","pageTitle","title","href","date","GatsbyImage","image","alt","hero_image_alt","hero_image_credit_link","hero_image_credit_text","Head","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}