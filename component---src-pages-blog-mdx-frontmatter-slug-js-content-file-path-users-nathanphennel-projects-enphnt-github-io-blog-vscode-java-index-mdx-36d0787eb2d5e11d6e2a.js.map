{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-js-content-file-path-users-nathanphennel-projects-enphnt-github-io-blog-vscode-java-index-mdx-36d0787eb2d5e11d6e2a.js","mappings":"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","sources":["webpack://nathan-phennel-website/./blog/vscode-java/index.mdx","webpack://nathan-phennel-website/./src/pages/blog/{mdx.frontmatter__slug}.js","webpack://nathan-phennel-website/./src/components/seo.js","webpack://nathan-phennel-website/./src/components/tagLinks.js","webpack://nathan-phennel-website/./src/pages/blog/index.module.css","webpack://nathan-phennel-website/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport {note} from \"../../src/components/layout.module.css\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h3, null, \"Can this be done?!\"), \"\\n\", React.createElement(_components.p, null, \"Short answer: Yes, you can!\"), \"\\n\", React.createElement(_components.h2, null, \"How to setup\"), \"\\n\", React.createElement(_components.p, null, \"There are some additional extensions that you must install and you must be using java version 11 or higher.\"), \"\\n\", React.createElement(_components.h3, null, \"Java Extension Pack\"), \"\\n\", React.createElement(_components.p, null, \"Extensions required to use VSCode for Java projects are actually all bundled in an extension pack: \", React.createElement(_components.a, {\n    href: \"https://marketplace.visualstudio.com/items?itemName=vscjava.vscode-java-pack\"\n  }, \"Java Extension Pack\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Basically, install the extension and then open up a Java project. You're now able to operate like you would in IntelliJ or eclipse but without all your fans running at full blast (at least that's been my experience). Also, the setup is painfully simple compared to other IDEs I've attempted to setup in the past (Not to mention this is all free).\"), \"\\n\", React.createElement(\"div\", {\n    className: note\n  }, React.createElement(_components.p, null, React.createElement(\"strong\", null, \"Note:\"), \" I kept hitting an annoying error:\"), React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">\\njava import ... cannot be resolved\\n\\n</code></pre></div>\"\n    }\n  }), React.createElement(_components.p, null, \"but I performed \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">java: clean</code>\"\n    }\n  }), \" from the command pallette and everything was back in action again.\")), \"\\n\", React.createElement(_components.h3, null, \"Gradle\"), \"\\n\", React.createElement(_components.p, null, \"I work with gradle so that requires another extension: \", React.createElement(_components.a, {\n    href: \"https://marketplace.visualstudio.com/items?itemName=richardwillis.vscode-gradle\"\n  }, \"Gradle Tasks\"), \". This extension will let you run all your gradle defined tasks\"), \"\\n\", React.createElement(_components.h2, null, \"Conclusion\"), \"\\n\", React.createElement(_components.p, null, \"This is super straightforward. Note to self, try using vscode for java going forward.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/nathanphennel/Projects/enphnt.github.io/blog/vscode-java/index.mdx\";\nimport * as React from 'react';\nimport {Link, graphql} from 'gatsby';\nimport {GatsbyImage, getImage} from 'gatsby-plugin-image';\nimport Layout from '../../components/layout';\nimport Seo from '../../components/seo';\nimport {breadcrumbs, breadcrumbLink, breadcrumbLinkHighlight, breadcrumbLinkSeparator, content, hero} from \"./index.module.css\";\nimport TagLinks from '../../components/tagLinks';\nconst BlogPost = ({data, children}) => {\n  const heroImage = getImage(data.mdx.frontmatter.hero_image);\n  return React.createElement(Layout, null, React.createElement(\"div\", {\n    style: {\n      paddingTop: 40\n    }\n  }, React.createElement(\"div\", {\n    className: breadcrumbs\n  }, React.createElement(Link, {\n    \"aria-label\": \"Home\",\n    className: breadcrumbLink,\n    to: \"/\"\n  }, \"Home\"), React.createElement(\"div\", {\n    className: breadcrumbLinkSeparator\n  }, \"»\"), React.createElement(Link, {\n    \"aria-label\": \"Blog\",\n    className: breadcrumbLink,\n    to: \"/blog\"\n  }, \"Blog\"), React.createElement(\"div\", {\n    className: breadcrumbLinkSeparator\n  }, \"»\"), React.createElement(Link, {\n    \"aria-label\": data.mdx.frontmatter.title,\n    className: breadcrumbLinkHighlight,\n    to: `./`\n  }, data.mdx.frontmatter.title)), heroImage ? React.createElement(React.Fragment, null, React.createElement(GatsbyImage, {\n    image: heroImage,\n    alt: data.mdx.frontmatter.hero_image_alt,\n    style: {\n      maxHeight: \"40vh\"\n    },\n    className: hero\n  }), React.createElement(\"p\", {\n    style: {\n      margin: \"2px 0 30px\",\n      fontSize: 10,\n      textAlign: \"right\"\n    }\n  }, \"Photo Credit:\", \" \", React.createElement(\"a\", {\n    \"aria-label\": data.mdx.frontmatter.hero_image_credit_link,\n    href: data.mdx.frontmatter.hero_image_credit_link\n  }, data.mdx.frontmatter.hero_image_credit_text))) : null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(TagLinks, {\n    tags: data.mdx.frontmatter.tags\n  }), React.createElement(\"h5\", null, data.mdx.frontmatter.date), React.createElement(\"br\"), React.createElement(\"div\", {\n    className: content\n  }, children), React.createElement(\"br\"), React.createElement(Link, {\n    \"aria-label\": \"Back to Blog\",\n    to: \"/blog\"\n  }, \"Go back to the blog homepage\")), React.createElement(Seo, {\n    title: `${data.mdx.frontmatter.title} | Blog`\n  }));\n};\nexport const query = graphql`\n  query($id: String) {\n        mdx(id: {eq: $id}) {\n        frontmatter {\n          title\n          tags\n          date(formatString: \"MMMM DD, YYYY\")\n          hero_image_alt\n          hero_image_credit_link\n          hero_image_credit_text\n          hero_image {\n            childImageSharp {\n            gatsbyImageData\n          }\n        }\n      }\n    }\n  }\n      `;\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n;\n","import * as React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nconst Seo = ({ title }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          image\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <html lang=\"en\" />\n      <meta name=\"description\" content={data.site.siteMetadata.description} />\n      <meta name=\"image\" content={data.site.siteMetadata.image} />\n      <title>{title} | {data.site.siteMetadata.title}</title>\n    </>\n  );\n};\n\nexport default Seo;","import React, { useState } from 'react';\nimport { Link } from 'gatsby';\n\nconst TagLinks = ({ tags }) => {\n  const [hover, setHover] = useState(false);\n  const style = {\n    normal: {\n      color: \"#35435d\",\n      fontWeight: 600,\n    },\n    hover: {\n      backgroundColor: \"#35435d\",\n      color: \"#ffffff\"\n    }\n  };\n\n  return <p>\n    Tags:{\" \"}\n    {\n      tags.map((tag, index) =>\n        <>\n          <Link\n            key={tag}\n            to={`/tags/${tag.replace(/ /g, \"-\")}`}\n            style={{\n              ...style.normal,\n              ...(hover === tag ? style.hover : null)\n            }}\n            onMouseEnter={() => {\n              setHover(tag);\n            }}\n            onMouseLeave={() => {\n              setHover(false);\n            }}\n          >\n            {tag}\n          </Link>\n          {\n            index === tags.length - 1 ? <></> : <>,{\" \"}</>\n          }\n        </>\n      )\n    }\n  </p>;\n};\n\nexport default TagLinks;\n","// extracted by mini-css-extract-plugin\nexport var article = \"index-module--article--45d42\";\nexport var breadcrumbLink = \"index-module--breadcrumbLink--6e770\";\nexport var breadcrumbLinkHighlight = \"index-module--breadcrumbLinkHighlight--f6fd2\";\nexport var breadcrumbLinkSeparator = \"index-module--breadcrumbLink-separator--cbc54\";\nexport var breadcrumbs = \"index-module--breadcrumbs--411be\";\nexport var content = \"index-module--content--136c6\";\nexport var hero = \"index-module--hero--ef469\";\nexport var highlightAnchor = \"index-module--highlightAnchor--811e2\";\nexport var post = \"index-module--post--e88a8\";\nexport var postList = \"index-module--postList--15965\";\nexport var thumbnail = \"index-module--thumbnail--3cc31\";","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h3","p","h2","a","span","_provideComponents","components","React","href","className","note","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","BlogPost","_ref","data","children","heroImage","getImage","mdx","frontmatter","hero_image","Layout","style","paddingTop","breadcrumbs","Link","breadcrumbLink","to","breadcrumbLinkSeparator","title","breadcrumbLinkHighlight","GatsbyImage","image","alt","hero_image_alt","maxHeight","hero","margin","fontSize","textAlign","hero_image_credit_link","hero_image_credit_text","TagLinks","tags","date","content","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","useStaticQuery","lang","name","site","siteMetadata","description","hover","setHover","useState","color","fontWeight","backgroundColor","map","tag","index","key","replace","onMouseEnter","onMouseLeave","length","article","highlightAnchor","post","postList","thumbnail","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}