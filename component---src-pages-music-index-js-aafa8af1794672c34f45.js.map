{"version":3,"file":"component---src-pages-music-index-js-aafa8af1794672c34f45.js","mappings":"sKAIA,MAAMA,EAAc,CAClB,YAAa,aAAc,YAAa,uBACxC,aAAc,YAAa,cAAe,gBAC1C,eAAgB,aAiGlB,IA9FwB,IAA0F,IAAzF,IAAEC,EAAKC,MAAM,GAAEC,EAAIC,aAAa,UAAEC,EAAS,KAAEC,EAAI,MAAEC,EAAK,KAAEC,EAAI,KAAEC,GAAM,QAAEC,IAAW,EAC1G,MAAMC,GAAQC,EAAAA,EAAAA,GAASP,GACjBQ,EAAab,EAAYC,EAAMD,EAAYc,SAC3C,EAACC,EAAW,EAACC,IAAiBC,EAAAA,EAAAA,UAAS,WAE7CC,EAAAA,EAAAA,YAAU,KACRC,OAAOC,iBAAiB,UAAU,KAC5BD,OAAOE,YAAc,IACvBL,EAAc,UAEdA,EAAc,SAChB,GACA,GACD,IAEH,MAAMM,EAAS,CACbC,QAAS,CACPC,QAAS,OACTC,oBAAqB,uCACrBC,QAAS,MACTC,SAAU,MACVC,QAAS,OAEXC,IAAK,CACHD,QAAS,EACTE,OAAQ,MACRC,gBAAiB,UACjBC,MAAO,UACPC,aAAc,MACdC,eAAgB,QAElBC,eAAgB,CACdX,QAAS,OACTY,SAAU,QAEZC,QAAS,CACPC,UAAW,EACXC,SAAU,QACVC,WAAY,IACZC,mBAAoB,YACpBC,oBAAqB,QACrBC,oBAAqB9B,EACrB+B,wBAAyB,EACzBjB,SAAU,eAEZkB,iBAAkB,CAChBf,OAAQ,eACRgB,YAAa,SACbC,WAAYhC,EACZY,SAAU,KAEZqB,KAAM,CACJD,WAAY,SACZE,eAAgB,eAChBzB,QAAS,OACT0B,cAAe,UAEjBC,GAAI,CACFnB,MAAOnB,EACPiB,OAAQ,IAIZ,OACE,2BACE,sBAAIsB,MAAO9B,EAAO6B,KAClB,2BAASC,MAAO9B,EAAOC,SACrB,uBAAK6B,MAAO9B,EAAOuB,kBACjB,gBAAC,EAAAQ,KAAI,CAAClD,GAAG,cAAc,gCAA+BI,EAAS+C,GAAE,SAAWhD,EAAI,KAC9E,gBAAC,EAAAiD,EAAW,CACVC,MAAO7C,EACP8C,IAAG,iBAAmBlD,MAI5B,uBAAK6C,MAAO9B,EAAO0B,MACjB,gBAAC,EAAAK,KAAI,CAAC,gCAA+B9C,EAAS+C,GAAE,SAAWhD,EAAI,IAAK8C,MAAO9B,EAAOe,SAC/E9B,GAEH,0BAAKC,GACL,yBAAIE,GACJ,uBAAK0C,MAAO9B,EAAOa,gBAChB1B,EAAKiD,KAAI7B,GACR,gBAAC,EAAAwB,KAAI,CAACM,IAAK9B,EAAKyB,GAAE,SAAWzB,EAAI+B,QAAQ,KAAM,KAAI,IAAKR,MAAO9B,EAAOO,KACnEA,QAMP,C,qHC9FV,MAyDagC,EAAO,QAAC,SAAEC,GAAU,SAAK,gBAAC,IAAG,CAACvD,MAAM,QAAQuD,SAAUA,GAAY,EAE/E,UA3DkB,IAAe,IAAd,KAAEC,GAAM,EAQzB,OACE,gBAAC,IAAM,KACL,uBAAKX,MATI,CACX5B,QAAS,OACTY,SAAU,OACVc,cAAe,SACfc,WAAY,WAMR,0BAAI,eACJ,yBAAI,sIAEuB,gBAAC,EAAAX,KAAI,CAAC,aAAW,eAAeC,GAAG,UAAS,QAAY,UAGjFS,EAAKE,OAAOC,MAAMR,KAAI,CAACxD,EAAMD,IAC3B,gBAAC,IAAe,CAAC0D,IAAKzD,EAAKC,GAAID,KAAMA,EAAMiE,KAAM,OAAQlE,IAAKA,OAI7D,C","sources":["webpack://nathan-phennel-website/./src/components/article-list-item.js","webpack://nathan-phennel-website/./src/pages/music/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'gatsby';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\n\nconst lightColors = [\n  \"lightblue\", \"lightcoral\", \"lightcyan\", \"lightgoldenrodyellow\",\n  \"lightgreen\", \"lightpink\", \"lightsalmon\", \"lightseagreen\",\n  \"lightskyblue\", \"lightgray\"\n];\n\nconst ArticleListItem = ({ idx, node: { id, frontmatter: { thumbnail, slug, title, date, tags }, excerpt } }) => {\n  const thumb = getImage(thumbnail);\n  const fancyColor = lightColors[idx % lightColors.length];\n  const [mobileGrid, setMobileGrid] = useState(\"span 1\");\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => {\n      if (window.innerWidth <= 768) {\n        setMobileGrid(\"span 2\");\n      } else {\n        setMobileGrid(\"span 1\");\n      }\n    });\n  }, []);\n\n  const styles = {\n    article: {\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(auto-fit, minmax(200px, 1fr))\",\n      gridGap: \"1em\",\n      maxWidth: \"99%\",\n      padding: \"1em\",\n    },\n    tag: {\n      padding: 4,\n      margin: \"4px\",\n      backgroundColor: \"#e0e0e0\",\n      color: \"inherit\",\n      borderRadius: \"4px\",\n      textDecoration: \"none\",\n    },\n    blogFooterTags: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    heading: {\n      marginTop: 0,\n      fontSize: \"1.3em\",\n      fontWeight: 600,\n      textDecorationLine: \"underline\",\n      textDecorationStyle: \"solid\",\n      textDecorationColor: fancyColor,\n      textDecorationThickness: 1,\n      maxWidth: \"max-content\",\n    },\n    thumbnailWrapper: {\n      margin: \"0.35em 0 0 0\",\n      justifySelf: \"center\",\n      gridColumn: mobileGrid,\n      maxWidth: 300,\n    },\n    info: {\n      gridColumn: \"span 2\",\n      justifyContent: \"space-around\",\n      display: \"flex\",\n      flexDirection: \"column\",\n    },\n    hr: {\n      color: fancyColor,\n      margin: 0,\n    }\n  };\n\n  return (\n    <div>\n      <hr style={styles.hr} />\n      <article style={styles.article}>\n        <div style={styles.thumbnailWrapper}>\n          <Link id=\"nohighlight\" aria-label={`Read more about ${title}`} to={`/blog/${slug}/`}>\n            <GatsbyImage\n              image={thumb}\n              alt={`Thumbnail for ${title}`}\n            />\n          </Link>\n        </div>\n        <div style={styles.info}>\n          <Link aria-label={`Read more about ${title}`} to={`/blog/${slug}/`} style={styles.heading}>\n            {title}\n          </Link>\n          <h5>{date}</h5>\n          <p>{excerpt}</p>\n          <div style={styles.blogFooterTags}>\n            {tags.map(tag => (\n              <Link key={tag} to={`/tags/${tag.replace(/ /g, \"-\")}/`} style={styles.tag}>\n                {tag}\n              </Link>\n            ))}\n          </div>\n        </div>\n      </article>\n    </div>\n  );\n};\n\nexport default ArticleListItem;\n","import * as React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Layout from '../../components/layout';\nimport Seo from '../../components/seo';\nimport ArticleListItem from '../../components/article-list-item';\n\nconst MusicPage = ({ data }) => {\n  const list = {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  };\n\n  return (\n    <Layout>\n      <div style={list}>\n        <h1>Music Posts</h1>\n        <p >\n          A collection of posts with original music, playlists and music theory included. In addition to post about\n          music I also write about <Link aria-label=\"Over to code\" to=\"/code/\">code</Link>, too.\n        </p>\n        {\n          data.allMdx.nodes.map((node, idx) =>\n            <ArticleListItem key={node.id} node={node} path={\"blog\"} idx={idx} />\n          )\n        }\n      </div>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query {\n    allMdx(\n      filter: {\n        internal: {contentFilePath: {regex: \"/blog/\"}}\n        frontmatter: {tags:  {regex: \"/music/\"}}\n      }\n      sort: {frontmatter: {date: DESC}}\n    ) {\n      nodes {\n        excerpt(pruneLength: 180)\n        frontmatter {\n          date(formatString: \"MMMM D, YYYY\")\n          title\n          slug\n          tags\n          thumbnail {\n            childImageSharp {\n              gatsbyImageData\n            }\n          }\n        }\n        id\n        internal {\n          contentFilePath\n        }\n      }\n    }\n  }\n`;\n\nexport const Head = ({ location }) => <Seo title=\"Music\" location={location} />;\n\nexport default MusicPage;"],"names":["lightColors","idx","node","id","frontmatter","thumbnail","slug","title","date","tags","excerpt","thumb","getImage","fancyColor","length","mobileGrid","setMobileGrid","useState","useEffect","window","addEventListener","innerWidth","styles","article","display","gridTemplateColumns","gridGap","maxWidth","padding","tag","margin","backgroundColor","color","borderRadius","textDecoration","blogFooterTags","flexWrap","heading","marginTop","fontSize","fontWeight","textDecorationLine","textDecorationStyle","textDecorationColor","textDecorationThickness","thumbnailWrapper","justifySelf","gridColumn","info","justifyContent","flexDirection","hr","style","Link","to","G","image","alt","map","key","replace","Head","location","data","alignItems","allMdx","nodes","path"],"sourceRoot":""}