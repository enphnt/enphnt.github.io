{"version":3,"file":"component---src-pages-projects-index-js-842ac9d5052cf039361d.js","mappings":"uKAIA,MAAMA,EAAc,CAAC,YAAa,YAAa,aAAc,YAAa,uBAAwB,aAAc,YAAa,cAAe,gBAAiB,gBAC7J,IAAIC,EAAa,EAgFjB,IA9EwB,IAA2F,IAAxFC,MAAM,GAAEC,EAAIC,aAAa,UAAEC,EAAS,KAAEC,EAAI,MAAEC,EAAK,KAAEC,EAAI,KAAEC,GAAM,QAAEC,GAAS,KAAEC,GAAM,EAC3G,MAAMC,GAAQC,EAAAA,EAAAA,GAASR,GACjBS,EAAS,CACbC,QAAS,CACPC,QAAS,OACTC,oBAAqB,qCACrBC,QAAS,MACTC,SAAU,MACVC,QAAS,WAEXC,IAAK,CACHD,QAAS,EACTE,OAAQ,MACRC,gBAAiB,UACjBC,aAAc,OAEhBC,eAAgB,CACdT,QAAS,OACTU,SAAU,QAEZC,QAAS,CACPC,UAAW,EACXC,SAAU,QACVC,WAAY,IACZC,mBAAoB,YACpBC,oBAAqB,QACrBC,oBAAqBjC,EAAY,EAAIC,IAAeD,EAAYkC,QAChEC,wBAAyB,GAE3BC,iBAAkB,CAChBd,OAAQ,cACRe,YAAa,UAEfC,KAAM,CACJC,cAAe,UAEjBC,GAAI,CACFC,MAAOzC,EAAYC,IAAeD,EAAYkC,QAC9CZ,OAAQ,IAIZ,OACE,2BACE,sBAAIoB,MAAO5B,EAAO0B,KAClB,2BAASE,MAAO5B,EAAOC,QAAS4B,IAAKxC,GAEnC,uBAAKuC,MAAO5B,EAAOsB,kBACjB,gBAAC,EAAAQ,KAAI,CAACzC,GAAG,cAAc,aAAYG,EAAMqC,IAAKrC,EAAMuC,GAAE,IAAMlC,EAAI,IAAIL,GAClE,gBAAC,EAAAwC,EAAW,CACVC,MAAOnC,EACPoC,IAAG,iBAAmBzC,MAK5B,uBAAKmC,MAAO5B,EAAOwB,MACjB,gBAAC,EAAAM,KAAI,CAAC,aAAYtC,EAAMqC,IAAKrC,EAAMuC,GAAE,IAAMlC,EAAI,IAAIL,EAAQoC,MAAO5B,EAAOa,SACtEpB,GAGH,0BAAKC,GACL,yBAAIE,GACJ,uBAAKgC,MAAO5B,EAAOW,gBAEfhB,EAAKwC,KAAI5B,GACP,gBAAC,EAAAuB,KAAI,CAACD,IAAKtB,EAAKwB,GAAE,SAAWxB,EAAI6B,QAAQ,KAAM,KAAI,IAAKR,MAAO5B,EAAOO,KACnEA,QAOT,C,sHC3EV,MAqDa8B,EAAO,IAAM,gBAAC,IAAG,CAAC5C,MAAM,aAErC,UAvDqB,IAAe,IAAd,KAAE6C,GAAM,EAQ5B,OACE,gBAAC,IAAM,KACL,uBAAKV,MATI,CACX1B,QAAS,OACTU,SAAU,OACV2B,cAAe,SACfC,WAAY,WAMR,0BAAI,YACJ,yBAAG,qHAGC,gBAAC,EAAAV,KAAI,CAAC,aAAW,OAAOC,GAAG,UAAS,QAAW,8BAIjDO,EAAKG,OAAOC,MAAMP,KAAI/C,GACpB,gBAAC,IAAe,CAACyC,IAAKzC,EAAKC,GAAID,KAAMA,EAAMS,KAAM,gBAIhD,C","sources":["webpack://nathan-phennel-website/./src/components/article-list-item.js","webpack://nathan-phennel-website/./src/pages/projects/index.js"],"sourcesContent":["import * as React from 'react';\nimport { Link } from 'gatsby';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\n\nconst lightColors = [\"lightgray\", \"lightblue\", \"lightcoral\", \"lightcyan\", \"lightgoldenrodyellow\", \"lightgreen\", \"lightpink\", \"lightsalmon\", \"lightseagreen\", \"lightskyblue\"];\nlet colorIndex = 0;\n\nconst ArticleListItem = ({ node: { id, frontmatter: { thumbnail, slug, title, date, tags }, excerpt }, path }) => {\n  const thumb = getImage(thumbnail);\n  const styles = {\n    article: {\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(auto-fit, minmax(9em, 1fr))\",\n      gridGap: \"1em\",\n      maxWidth: \"99%\",\n      padding: \"1em 1em\",\n    },\n    tag: {\n      padding: 4,\n      margin: \"4px\",\n      backgroundColor: \"#e0e0e0\",\n      borderRadius: \"4px\",\n    },\n    blogFooterTags: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    heading: {\n      marginTop: 0,\n      fontSize: \"1.6em\",\n      fontWeight: 600,\n      textDecorationLine: \"underline\",\n      textDecorationStyle: \"solid\",\n      textDecorationColor: lightColors[1 + colorIndex++ % lightColors.length],\n      textDecorationThickness: 1,\n    },\n    thumbnailWrapper: {\n      margin: \"0.5em 0 0 0\",\n      justifySelf: \"center\"\n    },\n    info: {\n      gridColumnEnd: \"span 3\"\n    },\n    hr: {\n      color: lightColors[colorIndex++ % lightColors.length],\n      margin: 0,\n    }\n  };\n\n  return (\n    <div>\n      <hr style={styles.hr} />\n      <article style={styles.article} key={id}>\n\n        <div style={styles.thumbnailWrapper}>\n          <Link id=\"nohighlight\" aria-label={slug} key={slug} to={`/${path}/${slug}`}>\n            <GatsbyImage\n              image={thumb}\n              alt={`Thumbnail for ${title}`}\n            />\n          </Link>\n        </div>\n\n        <div style={styles.info}>\n          <Link aria-label={slug} key={slug} to={`/${path}/${slug}`} style={styles.heading}>\n            {title}\n          </Link >\n\n          <h5>{date}</h5>\n          <p>{excerpt}</p>\n          <div style={styles.blogFooterTags}>\n            {\n              tags.map(tag => (\n                <Link key={tag} to={`/tags/${tag.replace(/ /g, \"-\")}/`} style={styles.tag}>\n                  {tag}\n                </Link>\n              ))\n            }\n          </div>\n        </div>\n      </article>\n    </div>\n  );\n};\n\nexport default ArticleListItem;","import * as React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Layout from '../../components/layout';\nimport Seo from '../../components/seo';\nimport ArticleListItem from '../../components/article-list-item';\n\nconst ProjectsPage = ({ data }) => {\n  const list = {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  };\n\n  return (\n    <Layout>\n      <div style={list}>\n        <h1>Projects</h1>\n        <p>\n          Here is a list of projects that I have discovered, been\n          involved with or built from scratch myself. I also have\n          a <Link aria-label=\"Blog\" to=\"/blog/\">blog</Link> section\n          of the site, too.\n        </p>\n        {\n          data.allMdx.nodes.map(node =>\n            <ArticleListItem key={node.id} node={node} path={\"projects\"} />\n          )\n        }\n      </div>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query {\n    allMdx(\n      filter: {internal: {contentFilePath: {regex: \"/projects/\"}}}\n      sort: {frontmatter: {date: DESC}}\n    ) {\n      nodes {\n        excerpt(pruneLength: 180)\n        frontmatter {\n          date(formatString: \"MMMM D, YYYY\")\n          title\n          slug\n          tags\n          thumbnail {\n            childImageSharp {\n              gatsbyImageData\n            }\n          }\n        }\n        id\n      }\n    }\n  }\n`;\n\nexport const Head = () => <Seo title=\"Projects\" />;\n\nexport default ProjectsPage;"],"names":["lightColors","colorIndex","node","id","frontmatter","thumbnail","slug","title","date","tags","excerpt","path","thumb","getImage","styles","article","display","gridTemplateColumns","gridGap","maxWidth","padding","tag","margin","backgroundColor","borderRadius","blogFooterTags","flexWrap","heading","marginTop","fontSize","fontWeight","textDecorationLine","textDecorationStyle","textDecorationColor","length","textDecorationThickness","thumbnailWrapper","justifySelf","info","gridColumnEnd","hr","color","style","key","Link","to","G","image","alt","map","replace","Head","data","flexDirection","alignItems","allMdx","nodes"],"sourceRoot":""}