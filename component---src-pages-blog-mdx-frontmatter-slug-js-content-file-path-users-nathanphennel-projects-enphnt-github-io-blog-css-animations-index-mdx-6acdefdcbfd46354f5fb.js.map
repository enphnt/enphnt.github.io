{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-js-content-file-path-users-nathanphennel-projects-enphnt-github-io-blog-css-animations-index-mdx-6acdefdcbfd46354f5fb.js","mappings":"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","sources":["webpack://nathan-phennel-website/./blog/css-animations/index.mdx","webpack://nathan-phennel-website/./blog/css-animations/index.module.css","webpack://nathan-phennel-website/./src/pages/blog/{mdx.frontmatter__slug}.js","webpack://nathan-phennel-website/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport {cssAnimationContainer, cssAnimation, slideInText} from \"./index.module.css\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Maybe you already are somewhat aware, maybe not. Alas, CSS can be pretty amazing at producing interesting eye candy.\"), \"\\n\", React.createElement(_components.p, null, \"I wanted to demonstrate one example here:\"), \"\\n\", React.createElement(\"div\", {\n    class: cssAnimationContainer\n  }, React.createElement(\"div\", {\n    class: cssAnimation\n  })), \"\\n\", React.createElement(_components.p, null, \"\\\"What's going on here?\\\", you ask. A few properties are to be noted:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"use a main class on the element which has a fixed height and width\"), \"\\n\", React.createElement(_components.li, null, \"define some \", React.createElement(_components.code, null, \"@keyframes\"), \" to define the 'steps' of the animation\"), \"\\n\", React.createElement(_components.li, null, \"the \", React.createElement(_components.code, null, \"@keyframes\"), \" have specific colors and border radii that are associated with each frame\"), \"\\n\", React.createElement(_components.li, null, \"set the duration of the entire animation using \", React.createElement(_components.code, null, \"animation-duration\"), \" css property\"), \"\\n\", React.createElement(_components.li, null, \"set the \", React.createElement(_components.code, null, \"animation-iteration-count\"), \" to \", React.createElement(_components.code, null, \"infinite\"), \" to make the mesmerizing effect last forever\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"This is just a super basic example and things can get even more weird. I'll leave it here for now but I think this can be applied to all sorts of things like animating notifications, button clicks (like in Material UI), or even use this when images are lazy loaded when scrolled into view.\"), \"\\n\", React.createElement(\"div\", {\n    style: {\n      width: 200,\n      overflow: \"hidden\"\n    }\n  }, React.createElement(\"p\", {\n    class: slideInText\n  }, React.createElement(_components.p, null, \"Until next time...\"))));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","// extracted by mini-css-extract-plugin\nexport var cssAnimation = \"index-module--css-animation--741f3\";\nexport var cssAnimationContainer = \"index-module--css-animation-container--33799\";\nexport var slideInText = \"index-module--slide-in-text--3e565\";\nexport var slidein = \"index-module--slidein--548ab\";\nexport var stretch = \"index-module--stretch--7b6f7\";","import GATSBY_COMPILED_MDX from \"/Users/nathanphennel/Projects/enphnt.github.io/blog/css-animations/index.mdx\";\nimport * as React from 'react';\nimport {graphql} from 'gatsby';\nimport {GatsbyImage, getImage} from 'gatsby-plugin-image';\nimport Layout from '../../components/layout';\nimport Seo from '../../components/seo';\nconst BlogPost = ({data, children}) => {\n  const heroImage = getImage(data.mdx.frontmatter.hero_image);\n  return React.createElement(Layout, {\n    pageTitle: data.mdx.frontmatter.title\n  }, React.createElement(\"a\", {\n    style: {\n      margin: \"2px 0 90px\",\n      fontSize: 12,\n      textAlign: \"right\"\n    },\n    href: \"/projects\"\n  }, \" ../Back to Projects\"), React.createElement(\"p\", null, data.mdx.frontmatter.date), heroImage ? React.createElement(React.Fragment, null, React.createElement(GatsbyImage, {\n    image: heroImage,\n    alt: data.mdx.frontmatter.hero_image_alt,\n    style: {\n      maxHeight: \"22vh\"\n    }\n  }), React.createElement(\"p\", {\n    style: {\n      margin: \"2px 0 30px\",\n      fontSize: 10,\n      textAlign: \"right\"\n    }\n  }, \"Photo Credit:\", \" \", React.createElement(\"a\", {\n    href: data.mdx.frontmatter.hero_image_credit_link\n  }, data.mdx.frontmatter.hero_image_credit_text))) : null, children);\n};\nexport const query = graphql`\n  query($id: String) {\n    mdx(id: {eq: $id}) {\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        hero_image_alt\n        hero_image_credit_link\n        hero_image_credit_text\n        hero_image {\n          childImageSharp {\n            gatsbyImageData\n          }\n        }\n      }\n    }\n  }\n`;\nexport const Head = () => React.createElement(Seo, {\n  title: \"Super Cool Blog Posts\"\n});\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","ul","li","code","_provideComponents","components","React","class","style","width","overflow","wrapper","MDXLayout","BlogPost","_ref","data","children","heroImage","getImage","mdx","frontmatter","hero_image","Layout","pageTitle","title","margin","fontSize","textAlign","href","date","GatsbyImage","image","alt","hero_image_alt","maxHeight","hero_image_credit_link","hero_image_credit_text","Head","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}