{"version":3,"file":"component---src-pages-music-index-js-b313cd2ee6843cbf4cf1.js","mappings":"8JA0BA,IAvBY,IAAgB,IAAf,MAAEA,GAAO,EACpB,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,cAY5B,OACE,gCACE,wBAAMC,KAAK,OACX,wBAAMC,KAAK,cAAcC,QAASJ,EAAKK,KAAKC,aAAaC,cACzD,wBAAMJ,KAAK,QAAQC,QAASJ,EAAKK,KAAKC,aAAaE,QACnD,6BAAQT,EAAM,MAAIC,EAAKK,KAAKC,aAAaP,OACxC,C,gICfP,MAyEaU,EAAO,IAAM,gBAAC,IAAG,CAACV,MAAM,UAErC,UA3EkB,IAAe,IAAd,KAAEC,GAAM,EAEzB,OACE,gBAAC,IAAM,KACL,uBAAKU,UAAWC,EAAAA,IACd,0BAAI,eACJ,yBAAI,6GAEI,gBAAC,EAAAC,KAAI,CAAC,aAAW,mBAAmBC,GAAG,cAAa,YAAgB,UAG1Eb,EAAKc,OAAOC,MAAMC,KAAI,CAACC,EAAMC,KAC3B,MAAMC,EAAOF,EAAKG,SAASC,gBACxBC,QAAQ,IAAIL,EAAKM,YAAYC,KAAI,aAAc,IAC5CC,EAAYN,EAAKO,UAAUP,EAAKQ,YAAY,MAE5CC,GAAQC,EAAAA,EAAAA,GAASZ,EAAKM,YAAYO,WACxC,OACE,gBAAC,EAAAlB,KAAI,CAAC,aAAYK,EAAKM,YAAYC,KAAMO,IAAKb,EAAOL,GAAOY,EAAS,IAAIR,EAAKM,YAAYC,MACxF,2BAASd,UAAWsB,EAAAA,GAASD,IAAKd,EAAKgB,IACrC,uBAAKvB,UAAWoB,EAAAA,IACd,gBAAC,EAAAI,EAAW,CACV1B,MAAOoB,EACPO,IAAG,iBAAmBlB,EAAKM,YAAYxB,SAG3C,uBAAKW,UAAW0B,EAAAA,IACd,0BAAKnB,EAAKM,YAAYxB,OACtB,0BAAKkB,EAAKM,YAAYc,MACtB,yBAAIpB,EAAKqB,WAGR,KAMR,C,gRC5CN,IAAIN,EAAU,+BACVO,EAAiB,sCACjBC,EAA0B,+CAC1BC,EAA0B,gDAC1BC,EAAc,mCACdtC,EAAU,+BACVuC,EAAO,4BACPP,EAAO,4BACPzB,EAAW,gCACXmB,EAAY,gC","sources":["webpack://nathan-phennel-website/./src/components/seo.js","webpack://nathan-phennel-website/./src/pages/music/index.js","webpack://nathan-phennel-website/./src/pages/blog/index.module.css"],"sourcesContent":["import * as React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nconst Seo = ({ title }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          image\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <html lang=\"en\" />\n      <meta name=\"description\" content={data.site.siteMetadata.description} />\n      <meta name=\"image\" content={data.site.siteMetadata.image} />\n      <title>{title} | {data.site.siteMetadata.title}</title>\n    </>\n  );\n};\n\nexport default Seo;","import * as React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Layout from '../../components/layout';\nimport Seo from '../../components/seo';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport { article, post, postList, thumbnail } from \"./../blog/index.module.css\";\n\nconst MusicPage = ({ data }) => {\n\n  return (\n    <Layout>\n      <div className={postList}>\n        <h1>Music Posts</h1>\n        <p >\n          A collection of posts with original music, playlists and music theory included. I also have written\n          about <Link aria-label=\"Over to Projects\" to=\"/projects/\">projects</Link>, too.\n        </p>\n        {\n          data.allMdx.nodes.map((node, index) => {\n            const path = node.internal.contentFilePath\n              .replace(`/${node.frontmatter.slug}/index.mdx`, \"\");\n            const urlFolder = path.substring(path.lastIndexOf('/'));\n\n            const thumb = getImage(node.frontmatter.thumbnail);\n            return (\n              <Link aria-label={node.frontmatter.slug} key={index} to={`${urlFolder}/${node.frontmatter.slug}`}>\n                <article className={article} key={node.id}>\n                  <div className={thumbnail}>\n                    <GatsbyImage\n                      image={thumb}\n                      alt={`Thumbnail for ${node.frontmatter.title}`}\n                    />\n                  </div>\n                  <div className={post}>\n                    <h2>{node.frontmatter.title}</h2>\n                    <h5>{node.frontmatter.date}</h5>\n                    <p>{node.excerpt}</p>\n                  </div>\n                </article>\n              </Link>\n\n            );\n          })\n        }\n      </div>\n    </Layout>\n  );\n};\n\n// TODO: make it find any post about music from projects and blog folders\nexport const query = graphql`\n  query {\n    allMdx(\n      filter: {\n        internal: {contentFilePath: {regex: \"/blog|projects/\"}}\n        frontmatter: {tags:  {regex: \"/music/\"}}\n      }\n      sort: {frontmatter: {date: DESC}}\n    ) {\n      nodes {\n        excerpt(pruneLength: 180)\n        frontmatter {\n          date(formatString: \"MMMM D, YYYY\")\n          title\n          slug\n          thumbnail {\n            childImageSharp {\n              gatsbyImageData\n            }\n          }\n        }\n        id\n        internal {\n          contentFilePath\n        }\n      }\n    }\n  }\n`;\n\nexport const Head = () => <Seo title=\"Music\" />;\n\nexport default MusicPage;","// extracted by mini-css-extract-plugin\nexport var article = \"index-module--article--45d42\";\nexport var breadcrumbLink = \"index-module--breadcrumbLink--6e770\";\nexport var breadcrumbLinkHighlight = \"index-module--breadcrumbLinkHighlight--f6fd2\";\nexport var breadcrumbLinkSeparator = \"index-module--breadcrumbLink-separator--cbc54\";\nexport var breadcrumbs = \"index-module--breadcrumbs--411be\";\nexport var content = \"index-module--content--136c6\";\nexport var hero = \"index-module--hero--ef469\";\nexport var post = \"index-module--post--e88a8\";\nexport var postList = \"index-module--postList--15965\";\nexport var thumbnail = \"index-module--thumbnail--3cc31\";"],"names":["title","data","useStaticQuery","lang","name","content","site","siteMetadata","description","image","Head","className","postList","Link","to","allMdx","nodes","map","node","index","path","internal","contentFilePath","replace","frontmatter","slug","urlFolder","substring","lastIndexOf","thumb","getImage","thumbnail","key","article","id","G","alt","post","date","excerpt","breadcrumbLink","breadcrumbLinkHighlight","breadcrumbLinkSeparator","breadcrumbs","hero"],"sourceRoot":""}