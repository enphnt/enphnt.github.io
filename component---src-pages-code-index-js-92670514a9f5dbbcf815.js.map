{"version":3,"file":"component---src-pages-code-index-js-92670514a9f5dbbcf815.js","mappings":"sKAIA,MAAMA,EAAc,CAClB,YAAa,aAAc,YAAa,uBACxC,aAAc,YAAa,cAAe,gBAC1C,eAAgB,aAgFlB,IA7EwB,IAA0F,IAAzF,IAAEC,EAAKC,MAAM,GAAEC,EAAIC,aAAa,UAAEC,EAAS,KAAEC,EAAI,MAAEC,EAAK,KAAEC,EAAI,KAAEC,GAAM,QAAEC,IAAW,EAC1G,MAAMC,GAAQC,EAAAA,EAAAA,GAASP,GACjBQ,EAAab,EAAYC,EAAMD,EAAYc,QAE3CC,EAAS,CACbC,QAAS,CACPC,QAAS,OACTC,oBAAqB,qCACrBC,QAAS,MACTC,SAAU,MACVC,QAAS,WAEXC,IAAK,CACHD,QAAS,EACTE,OAAQ,MACRC,gBAAiB,UACjBC,MAAO,UACPC,aAAc,MACdC,eAAgB,QAElBC,eAAgB,CACdX,QAAS,OACTY,SAAU,QAEZC,QAAS,CACPC,UAAW,EACXC,SAAU,QACVC,WAAY,IACZC,mBAAoB,YACpBC,oBAAqB,QACrBC,oBAAqBvB,EACrBwB,wBAAyB,GAE3BC,iBAAkB,CAChBf,OAAQ,cACRgB,YAAa,UAEfC,KAAM,CACJC,cAAe,UAEjBC,GAAI,CACFjB,MAAOZ,EACPU,OAAQ,IAIZ,OACE,2BACE,sBAAIoB,MAAO5B,EAAO2B,KAClB,2BAASC,MAAO5B,EAAOC,SACrB,uBAAK2B,MAAO5B,EAAOuB,kBACjB,gBAAC,EAAAM,KAAI,CAACzC,GAAG,cAAc,gCAA+BI,EAASsC,GAAE,SAAWvC,EAAI,KAC9E,gBAAC,EAAAwC,EAAW,CACVC,MAAOpC,EACPqC,IAAG,iBAAmBzC,MAI5B,uBAAKoC,MAAO5B,EAAOyB,MACjB,gBAAC,EAAAI,KAAI,CAAC,gCAA+BrC,EAASsC,GAAE,SAAWvC,EAAI,IAAKqC,MAAO5B,EAAOe,SAC/EvB,GAEH,0BAAKC,GACL,yBAAIE,GACJ,uBAAKiC,MAAO5B,EAAOa,gBAChBnB,EAAKwC,KAAI3B,GACR,gBAAC,EAAAsB,KAAI,CAACM,IAAK5B,EAAKuB,GAAE,SAAWvB,EAAI6B,QAAQ,KAAM,KAAI,IAAKR,MAAO5B,EAAOO,KACnEA,QAMP,C,sHC7EV,MAyDa8B,EAAO,QAAC,SAAEC,GAAU,SAAK,gBAAC,IAAG,CAAC9C,MAAM,QAAQ8C,SAAUA,GAAY,EAE/E,UA3DkB,IAAe,IAAd,KAAEC,GAAM,EAQzB,OACE,gBAAC,IAAM,KACL,uBAAKX,MATI,CACX1B,QAAS,OACTY,SAAU,OACV0B,cAAe,SACfC,WAAY,WAMR,0BAAI,cACJ,yBAAI,qIAEsB,gBAAC,EAAAZ,KAAI,CAAC,6BAA6BC,GAAI,WAAW,SAAa,UAGvFS,EAAKG,OAAOC,MAAMT,KAAI,CAAC/C,EAAMD,IAC3B,gBAAC,IAAe,CAACiD,IAAKjD,EAAKC,KAAMA,EAAMyD,KAAM,OAAQ1D,IAAKA,OAIzD,C","sources":["webpack://nathan-phennel-website/./src/components/article-list-item.js","webpack://nathan-phennel-website/./src/pages/code/index.js"],"sourcesContent":["import * as React from 'react';\nimport { Link } from 'gatsby';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\n\nconst lightColors = [\n  \"lightblue\", \"lightcoral\", \"lightcyan\", \"lightgoldenrodyellow\",\n  \"lightgreen\", \"lightpink\", \"lightsalmon\", \"lightseagreen\",\n  \"lightskyblue\", \"lightgray\"\n];\n\nconst ArticleListItem = ({ idx, node: { id, frontmatter: { thumbnail, slug, title, date, tags }, excerpt } }) => {\n  const thumb = getImage(thumbnail);\n  const fancyColor = lightColors[idx % lightColors.length];\n\n  const styles = {\n    article: {\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(auto-fit, minmax(9em, 1fr))\",\n      gridGap: \"1em\",\n      maxWidth: \"99%\",\n      padding: \"1em 1em\",\n    },\n    tag: {\n      padding: 4,\n      margin: \"4px\",\n      backgroundColor: \"#e0e0e0\",\n      color: \"inherit\",\n      borderRadius: \"4px\",\n      textDecoration: \"none\",\n    },\n    blogFooterTags: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    heading: {\n      marginTop: 0,\n      fontSize: \"1.6em\",\n      fontWeight: 600,\n      textDecorationLine: \"underline\",\n      textDecorationStyle: \"solid\",\n      textDecorationColor: fancyColor,\n      textDecorationThickness: 1,\n    },\n    thumbnailWrapper: {\n      margin: \"0.5em 0 0 0\",\n      justifySelf: \"center\"\n    },\n    info: {\n      gridColumnEnd: \"span 3\"\n    },\n    hr: {\n      color: fancyColor,\n      margin: 0,\n    }\n  };\n\n  return (\n    <div>\n      <hr style={styles.hr} />\n      <article style={styles.article}>\n        <div style={styles.thumbnailWrapper}>\n          <Link id=\"nohighlight\" aria-label={`Read more about ${title}`} to={`/blog/${slug}/`}>\n            <GatsbyImage\n              image={thumb}\n              alt={`Thumbnail for ${title}`}\n            />\n          </Link>\n        </div>\n        <div style={styles.info}>\n          <Link aria-label={`Read more about ${title}`} to={`/blog/${slug}/`} style={styles.heading}>\n            {title}\n          </Link>\n          <h5>{date}</h5>\n          <p>{excerpt}</p>\n          <div style={styles.blogFooterTags}>\n            {tags.map(tag => (\n              <Link key={tag} to={`/tags/${tag.replace(/ /g, \"-\")}/`} style={styles.tag}>\n                {tag}\n              </Link>\n            ))}\n          </div>\n        </div>\n      </article>\n    </div>\n  );\n};\n\nexport default ArticleListItem;\n","import * as React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Layout from '../../components/layout';\nimport Seo from '../../components/seo';\nimport ArticleListItem from '../../components/article-list-item';\n\nconst MusicPage = ({ data }) => {\n  const list = {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  };\n\n  return (\n    <Layout>\n      <div style={list}>\n        <h1>Code Posts</h1>\n        <p >\n          A collection of posts with original music, playlists and music theory included. In addition to post about\n          code I also write about <Link aria-label={`Over to Music`} to={\"/music/\"}>music</Link>, too.\n        </p>\n        {\n          data.allMdx.nodes.map((node, idx) =>\n            <ArticleListItem key={idx} node={node} path={\"blog\"} idx={idx} />\n          )\n        }\n      </div>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query {\n    allMdx(\n      filter: {\n        internal: {contentFilePath: {regex: \"/blog/\"}}\n        frontmatter: {tags:  {regex: \"/web dev|software/\"}}\n      }\n      sort: {frontmatter: {date: DESC}}\n    ) {\n      nodes {\n        excerpt(pruneLength: 180)\n        frontmatter {\n          date(formatString: \"MMMM D, YYYY\")\n          title\n          slug\n          tags\n          thumbnail {\n            childImageSharp {\n              gatsbyImageData\n            }\n          }\n        }\n        id\n        internal {\n          contentFilePath\n        }\n      }\n    }\n  }\n`;\n\nexport const Head = ({ location }) => <Seo title=\"Music\" location={location} />;\n\nexport default MusicPage;"],"names":["lightColors","idx","node","id","frontmatter","thumbnail","slug","title","date","tags","excerpt","thumb","getImage","fancyColor","length","styles","article","display","gridTemplateColumns","gridGap","maxWidth","padding","tag","margin","backgroundColor","color","borderRadius","textDecoration","blogFooterTags","flexWrap","heading","marginTop","fontSize","fontWeight","textDecorationLine","textDecorationStyle","textDecorationColor","textDecorationThickness","thumbnailWrapper","justifySelf","info","gridColumnEnd","hr","style","Link","to","G","image","alt","map","key","replace","Head","location","data","flexDirection","alignItems","allMdx","nodes","path"],"sourceRoot":""}