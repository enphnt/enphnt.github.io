{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-js-content-file-path-users-nathanphennel-projects-code-enphnt-github-io-blog-seo-gatsby-sitemap-robots-index-mdx-475aa96a80c9280c82b2.js","mappings":"mOAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,KAAM,OACNC,EAAG,IACHC,GAAI,KACJC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBZ,EAAYG,GAAI,CACnFU,GAAI,mCACJC,MAAO,CACLC,SAAU,aAEX,mCAAoCH,EAAAA,cAAoBZ,EAAYI,EAAG,CACxEY,KAAM,oCACN,aAAc,6CACdC,UAAW,gBACVL,EAAAA,cAAoBZ,EAAYK,KAAM,CACvCa,wBAAyB,CACvBC,OAAQ,oeAEN,KAAMP,EAAAA,cAAoBZ,EAAYM,EAAG,KAAM,kMAAmMM,EAAAA,cAAoBZ,EAAYK,KAAM,CAC5Ra,wBAAyB,CACvBC,OAAQ,qDAER,QAASP,EAAAA,cAAoBZ,EAAYK,KAAM,CACjDa,wBAAyB,CACvBC,OAAQ,oDAER,mDAAoDP,EAAAA,cAAoBZ,EAAYK,KAAM,CAC5Fa,wBAAyB,CACvBC,OAAQ,4DAER,mCAAoCP,EAAAA,cAAoBZ,EAAYK,KAAM,CAC5Ea,wBAAyB,CACvBC,OAAQ,wEAER,2BAA4BP,EAAAA,cAAoBZ,EAAYK,KAAM,CACpEa,wBAAyB,CACvBC,OAAQ,uEAER,KAAM,KAAMP,EAAAA,cAAoBZ,EAAYM,EAAG,KAAM,+JAAgK,KAAMM,EAAAA,cAAoBZ,EAAYM,EAAG,KAAM,gIAAiI,KAAMM,EAAAA,cAAoBZ,EAAYM,EAAG,KAAM,gJAAiJ,KAAMM,EAAAA,cAAoBZ,EAAYG,GAAI,CACjnBU,GAAI,wBACJC,MAAO,CACLC,SAAU,aAEX,wBAAyBH,EAAAA,cAAoBZ,EAAYI,EAAG,CAC7DY,KAAM,yBACN,aAAc,kCACdC,UAAW,gBACVL,EAAAA,cAAoBZ,EAAYK,KAAM,CACvCa,wBAAyB,CACvBC,OAAQ,oeAEN,KAAMP,EAAAA,cAAoBZ,EAAYM,EAAG,KAAM,OAAQM,EAAAA,cAAoBZ,EAAYI,EAAG,CAC9FY,KAAM,mFACL,yBAA0B,iIAAkI,KAAMJ,EAAAA,cAAoBZ,EAAYK,KAAM,CACzMa,wBAAyB,CACvBC,OAAQ,sOAER,KAAMP,EAAAA,cAAoBZ,EAAYM,EAAG,KAAM,oCAAqCM,EAAAA,cAAoBZ,EAAYK,KAAM,CAC5Ha,wBAAyB,CACvBC,OAAQ,yDAER,0EAA2EP,EAAAA,cAAoBZ,EAAYK,KAAM,CACnHa,wBAAyB,CACvBC,OAAQ,gDAER,qBAAsBP,EAAAA,cAAoBZ,EAAYK,KAAM,CAC9Da,wBAAyB,CACvBC,OAAQ,qDAER,gEAAiE,KAAMP,EAAAA,cAAoBZ,EAAYK,KAAM,CAC/Ga,wBAAyB,CACvBC,OAAQ,kyCAER,KAAMP,EAAAA,cAAoBZ,EAAYM,EAAG,KAAM,6GAA8GM,EAAAA,cAAoBZ,EAAYK,KAAM,CACrMa,wBAAyB,CACvBC,OAAQ,+CAER,wBAAyBP,EAAAA,cAAoBZ,EAAYK,KAAM,CACjEa,wBAAyB,CACvBC,OAAQ,qDAER,oCAAqCP,EAAAA,cAAoBZ,EAAYK,KAAM,CAC7Ea,wBAAyB,CACvBC,OAAQ,mEAER,oCAAqCP,EAAAA,cAAoBZ,EAAYK,KAAM,CAC7Ea,wBAAyB,CACvBC,OAAQ,+CAER,mIAAoIP,EAAAA,cAAoBZ,EAAYI,EAAG,CACzKY,KAAM,4EACL,wBAAyB,sBAAuB,KAAMJ,EAAAA,cAAoBZ,EAAYM,EAAG,KAAM,qCAAsC,KAAMM,EAAAA,cAAoBZ,EAAYK,KAAM,CAClLa,wBAAyB,CACvBC,OAAQ,wiNAER,KAAMP,EAAAA,cAAoBZ,EAAYG,GAAI,CAC5CU,GAAI,0BACJC,MAAO,CACLC,SAAU,aAEX,2BAA4BH,EAAAA,cAAoBZ,EAAYI,EAAG,CAChEY,KAAM,2BACN,aAAc,oCACdC,UAAW,gBACVL,EAAAA,cAAoBZ,EAAYK,KAAM,CACvCa,wBAAyB,CACvBC,OAAQ,oeAEN,KAAMP,EAAAA,cAAoBZ,EAAYM,EAAG,KAAM,OAAQM,EAAAA,cAAoBZ,EAAYI,EAAG,CAC9FY,KAAM,8DACL,4BAA6B,qHAAsH,KAAMJ,EAAAA,cAAoBZ,EAAYK,KAAM,CAChMa,wBAAyB,CACvBC,OAAQ,yOAER,KAAMP,EAAAA,cAAoBZ,EAAYM,EAAG,KAAM,oCAAqCM,EAAAA,cAAoBZ,EAAYK,KAAM,CAC5Ha,wBAAyB,CACvBC,OAAQ,yDAER,kGAAmG,KAAMP,EAAAA,cAAoBZ,EAAYM,EAAG,KAAM,qDAAsDM,EAAAA,cAAoBZ,EAAYK,KAAM,CAChPa,wBAAyB,CACvBC,OAAQ,+CAER,wBAAyBP,EAAAA,cAAoBZ,EAAYK,KAAM,CACjEa,wBAAyB,CACvBC,OAAQ,qDAER,uCAAwCP,EAAAA,cAAoBZ,EAAYK,KAAM,CAChFa,wBAAyB,CACvBC,OAAQ,oDAER,uIAAwIP,EAAAA,cAAoBZ,EAAYI,EAAG,CAC7KY,KAAM,8EACL,wBAAyB,sBAAuB,KAAMJ,EAAAA,cAAoBZ,EAAYG,GAAI,CAC3FU,GAAI,sBACJC,MAAO,CACLC,SAAU,aAEX,sBAAuBH,EAAAA,cAAoBZ,EAAYI,EAAG,CAC3DY,KAAM,uBACN,aAAc,gCACdC,UAAW,gBACVL,EAAAA,cAAoBZ,EAAYK,KAAM,CACvCa,wBAAyB,CACvBC,OAAQ,oeAEN,KAAMP,EAAAA,cAAoBZ,EAAYM,EAAG,KAAM,6EAA8EM,EAAAA,cAAoBZ,EAAYK,KAAM,CACvKa,wBAAyB,CACvBC,OAAQ,8CAER,4EAA6EP,EAAAA,cAAoBZ,EAAYK,KAAM,CACrHa,wBAAyB,CACvBC,OAAQ,+CAER,iGAAkGP,EAAAA,cAAoBZ,EAAYK,KAAM,CAC1Ia,wBAAyB,CACvBC,OAAQ,+CAER,YAAa,KAAMP,EAAAA,cAAoBZ,EAAYG,GAAI,CACzDU,GAAI,sBACJC,MAAO,CACLC,SAAU,aAEX,sBAAuBH,EAAAA,cAAoBZ,EAAYI,EAAG,CAC3DY,KAAM,uBACN,aAAc,gCACdC,UAAW,gBACVL,EAAAA,cAAoBZ,EAAYK,KAAM,CACvCa,wBAAyB,CACvBC,OAAQ,oeAEN,KAAMP,EAAAA,cAAoBZ,EAAYM,EAAG,KAAM,iIAAkI,KAAMM,EAAAA,cAAoBZ,EAAYO,GAAI,KAAM,KAAMK,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,OAAQI,EAAAA,cAAoBZ,EAAYK,KAAM,CACnUa,wBAAyB,CACvBC,OAAQ,uDAER,6FAA8FP,EAAAA,cAAoBZ,EAAYK,KAAM,CACtIa,wBAAyB,CACvBC,OAAQ,mFAER,8BAA+BP,EAAAA,cAAoBZ,EAAYK,KAAM,CACvEa,wBAAyB,CACvBC,OAAQ,8DAER,KAAM,KAAMP,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,mFAAoFI,EAAAA,cAAoBZ,EAAYK,KAAM,CAClLa,wBAAyB,CACvBC,OAAQ,qDAER,wCAAyCP,EAAAA,cAAoBZ,EAAYK,KAAM,CACjFa,wBAAyB,CACvBC,OAAQ,8DAER,WAAYP,EAAAA,cAAoBZ,EAAYK,KAAM,CACpDa,wBAAyB,CACvBC,OAAQ,0EAER,gGAAiG,KAAMP,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,qFAAsFI,EAAAA,cAAoBZ,EAAYK,KAAM,CAC/Qa,wBAAyB,CACvBC,OAAQ,oDAER,wCAAyCP,EAAAA,cAAoBZ,EAAYK,KAAM,CACjFa,wBAAyB,CACvBC,OAAQ,8DAER,WAAYP,EAAAA,cAAoBZ,EAAYK,KAAM,CACpDa,wBAAyB,CACvBC,OAAQ,yEAER,kMAAmMP,EAAAA,cAAoBZ,EAAYK,KAAM,CAC3Oa,wBAAyB,CACvBC,OAAQ,mFAER,KAAM,MAAO,KAAMP,EAAAA,cAAoBZ,EAAYG,GAAI,CACzDU,GAAI,mBACJC,MAAO,CACLC,SAAU,aAEX,mBAAoBH,EAAAA,cAAoBZ,EAAYI,EAAG,CACxDY,KAAM,oBACN,aAAc,6BACdC,UAAW,gBACVL,EAAAA,cAAoBZ,EAAYK,KAAM,CACvCa,wBAAyB,CACvBC,OAAQ,oeAEN,KAAMP,EAAAA,cAAoBZ,EAAYM,EAAG,KAAM,+EAAgFM,EAAAA,cAAoBZ,EAAYK,KAAM,CACzKa,wBAAyB,CACvBC,OAAQ,kDAER,qEAAsE,KAAMP,EAAAA,cAAoBZ,EAAYM,EAAG,KAAM,yBAA0BM,EAAAA,cAAoBZ,EAAYI,EAAG,CACpLY,KAAM,6BACL,yBAA0B,gBAAiBJ,EAAAA,cAAoBZ,EAAYI,EAAG,CAC/EY,KAAM,+EACL,QAAS,yHAA0H,KAAMJ,EAAAA,cAAoBZ,EAAYO,GAAI,KAAM,KAAMK,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,+NAAgO,KAAMI,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,+NAAgO,KAAMI,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,mPAAoP,KAAMI,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,2TAA4T,MAAO,KAAMI,EAAAA,cAAoBZ,EAAYM,EAAG,KAAM,8CAA+C,KAAMM,EAAAA,cAAoBZ,EAAYS,GAAI,CACn/CI,GAAI,sBACJC,MAAO,CACLC,SAAU,aAEX,sBAAuBH,EAAAA,cAAoBZ,EAAYI,EAAG,CAC3DY,KAAM,uBACN,aAAc,gCACdC,UAAW,gBACVL,EAAAA,cAAoBZ,EAAYK,KAAM,CACvCa,wBAAyB,CACvBC,OAAQ,oeAEN,KAAMP,EAAAA,cAAoBZ,EAAYM,EAAG,KAAM,mKAAoKM,EAAAA,cAAoBZ,EAAYI,EAAG,CAC1PY,KAAM,sFACL,cAAe,sBAAuB,KAAMJ,EAAAA,cAAoBZ,EAAYS,GAAI,CACjFI,GAAI,wBACJC,MAAO,CACLC,SAAU,aAEX,yBAA0BH,EAAAA,cAAoBZ,EAAYI,EAAG,CAC9DY,KAAM,yBACN,aAAc,kCACdC,UAAW,gBACVL,EAAAA,cAAoBZ,EAAYK,KAAM,CACvCa,wBAAyB,CACvBC,OAAQ,oeAEN,KAAMP,EAAAA,cAAoBZ,EAAYM,EAAG,KAAM,sLAAuLM,EAAAA,cAAoBZ,EAAYI,EAAG,CAC7QY,KAAM,8DACL,kBAAmB,0BACxB,CAKA,MAJA,SAAoBjB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOqB,QAASC,GAAapB,OAAOC,OAAO,CAAC,GAAGQ,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOU,EAAYT,EAAAA,cAAoBS,EAAWtB,EAAOa,EAAAA,cAAoBd,EAAmBC,IAAUD,EAAkBC,EAC9H,E,gFCvQA,MAAMuB,EAAWC,IAAsB,IAArB,KAACC,EAAI,SAAEC,GAAS,EAChC,MAAOC,KAAMC,aAAa,MAACC,EAAK,KAAEC,EAAI,KAAEC,EAAI,WAAEC,EAAU,eAAEC,EAAc,uBAAEC,EAAsB,uBAAEC,GAAuB,gBAAEC,IAAoBX,EAC/I,OAAOZ,EAAAA,cAAoBwB,EAAAA,EAAQ,KAAMxB,EAAAA,cAAoB,MAAO,CAClEE,MAAO,CACLuB,WAAY,KAEbzB,EAAAA,cAAoB0B,EAAAA,EAAa,CAClCV,MAAOA,EACPW,KAAM,SACJR,GAAcnB,EAAAA,cAAoB4B,EAAAA,EAAW,CAC/CC,MAAOV,EACPW,IAAKV,EACLW,OAAQT,EACRU,KAAMX,IACJrB,EAAAA,cAAoB,KAAM,KAAMgB,GAAQhB,EAAAA,cAAoBiC,EAAAA,EAAU,CACxEhB,KAAMA,IACJjB,EAAAA,cAAoB,KAAM,KAAMkB,GAAOlB,EAAAA,cAAoB,MAAOA,EAAAA,cAAoBkC,EAAAA,EAAiB,CACzGC,KAAMZ,IACJvB,EAAAA,cAAoBoC,EAAAA,GAAYpC,EAAAA,cAAoB,MAAO,KAAMa,GAAWb,EAAAA,cAAoB,MAAOA,EAAAA,cAAoBqC,EAAAA,IAAa,EAwBjIC,EAAOC,IAAA,IAAC,SAACC,EAAQ,KAAE5B,GAAK,SAAKZ,EAAAA,cAAoByC,EAAAA,EAAK,CACjED,SAAUA,EACVxB,MAAOJ,EAAKE,IAAIC,YAAYC,MAC5BG,WAAYP,EAAKE,IAAIC,YAAYI,WACjCuB,QAAS9B,EAAKE,IAAI4B,SAClB,EAEa,SAASC,EAAiBxD,GACvC,OAAOa,EAAAA,cAAoBU,EAAUvB,EAAOa,EAAAA,cAAoB4C,EAAqBzD,GACvF,C,wDC1DA,MAAM0D,EAAc,CAClB,YAAa,aAAc,YAAa,uBACxC,aAAc,YAAa,cAAe,gBAC1C,eAAgB,aAgGlB,IA7FwB,IAA0F,IAAzF,IAAEC,EAAKC,MAAM,GAAE9C,EAAIc,aAAa,UAAEiC,EAAS,KAAEC,EAAI,MAAEjC,EAAK,KAAEE,EAAI,KAAED,GAAM,QAAEyB,IAAW,EAC1G,MAAMQ,GAAQC,EAAAA,EAAAA,GAASH,GACjBI,EAAaP,EAAYC,EAAMD,EAAYQ,SAC3C,EAACC,EAAW,EAACC,IAAiBC,EAAAA,EAAAA,aAEpCC,EAAAA,EAAAA,YAAU,KACRC,OAAOC,iBAAiB,UAAU,KAChCJ,EAAc,UACVG,OAAOE,YAAc,KACvBL,EAAc,SAChB,GACA,GACD,IAEH,MAAMM,EAAS,CACbC,QAAS,CACPC,QAAS,OACTC,oBAAqB,uCACrBC,QAAS,MACTC,SAAU,MACVC,QAAS,OAEXC,IAAK,CACHD,QAAS,EACTE,OAAQ,MACRC,gBAAiB,UACjBC,MAAO,UACPC,aAAc,MACdC,eAAgB,QAElBC,eAAgB,CACdX,QAAS,OACTY,SAAU,QAEZC,QAAS,CACPC,UAAW,EACXC,SAAU,QACVC,WAAY,IACZC,mBAAoB,YACpBC,oBAAqB,QACrBC,oBAAqB9B,EACrB+B,wBAAyB,EACzBjB,SAAU,eAEZkB,iBAAkB,CAChBf,OAAQ,eACRgB,YAAa,SACbC,WAAYhC,EACZY,SAAU,KAEZqB,KAAM,CACJD,WAAY,SACZE,eAAgB,eAChBzB,QAAS,OACT0B,cAAe,UAEjBC,GAAI,CACFnB,MAAOnB,EACPiB,OAAQ,IAIZ,OACE,2BACE,sBAAInE,MAAO2D,EAAO6B,KAClB,2BAASxF,MAAO2D,EAAOC,SACrB,uBAAK5D,MAAO2D,EAAOuB,kBACjB,gBAAC,EAAAO,KAAI,CAAC1F,GAAG,cAAc,gCAA+Be,EAAS4E,GAAE,SAAW3C,EAAI,KAC9E,gBAAC,EAAA4C,EAAW,CACVhE,MAAOqB,EACPpB,IAAG,iBAAmBd,MAI5B,uBAAKd,MAAO2D,EAAO0B,MACjB,gBAAC,EAAAI,KAAI,CAAC,gCAA+B3E,EAAS4E,GAAE,SAAW3C,EAAI,IAAK/C,MAAO2D,EAAOe,SAC/E5D,GAEH,0BAAKE,GACL,yBAAIwB,GACJ,uBAAKxC,MAAO2D,EAAOa,gBAChBzD,EAAK6E,KAAI1B,GACR,gBAAC,EAAAuB,KAAI,CAACI,IAAK3B,EAAKwB,GAAE,SAAWxB,EAAI4B,QAAQ,KAAM,KAAI,IAAK9F,MAAO2D,EAAOO,KACnEA,QAMP,C,qCChGV,MAAM6B,E,QAAkBC,QAAAA,OAAAA,WAAa,uEAAbA,CAAa,iRA8CrC,IA3BkB,KAChB,MAAM,EAACC,EAAW,EAACC,IAAiB5C,EAAAA,EAAAA,WAAS,IAE7CC,EAAAA,EAAAA,YAAU,KACR,MAAM4C,EAAe,KACf3C,OAAO4C,YAAc,IACvBF,GAAc,GAEdA,GAAc,EAChB,EAIF,OADA1C,OAAOC,iBAAiB,SAAU0C,GAC3B,IAAM3C,OAAO6C,oBAAoB,SAAUF,EAAa,GAC9D,IAMH,OAAOF,EACL,gBAACF,EAAe,CAACO,QALC,KAClB9C,OAAO+C,SAAS,CAAEC,IAAK,EAAGC,SAAU,UAAW,GAK7C,4BAAM,MAEN,IAAI,C,+CC3CV,MAAMzG,EAAQ,CACZ0G,YAAa,CACX7C,QAAS,OACT8C,WAAY,WACZxC,OAAQ,EACRS,SAAU,oBAEZgC,eAAgB,CACdC,aAAc,EACdC,WAAY,SACZvC,eAAgB,QAElBwC,wBAAyB,CACvBlC,WAAY,IACZN,eAAgB,QAElByC,wBAAyB,CACvBpC,SAAU,QACVC,WAAY,IACZV,OAAQ,EACR8C,cAAe,EACf5C,MAAO,qBAcX,IAVoB,QAAC,MAAEvD,EAAK,KAAEW,GAAM,SAClC,uBAAKzB,MAAOA,EAAM0G,aAChB,gBAAC,EAAAjB,KAAI,CAAC,aAAW,OAAOzF,MAAOA,EAAM4G,eAAgBlB,GAAG,KAAK,KAAK,QAClE,uBAAK1F,MAAOA,EAAMgH,yBAAyB,KAC3C,gBAAC,EAAAvB,KAAI,CAAC,aAAYhE,EAAMzB,MAAOA,EAAM4G,eAAgBlB,GAAE,IAAMjE,EAAI,KAAMA,EAAKyF,OAAO,GAAGC,cAAgB1F,EAAK2F,MAAM,IACjH,uBAAKpH,MAAOA,EAAMgH,yBAAyB,KAC3C,gBAAC,EAAAvB,KAAI,CAAC,aAAY3E,EAAOd,MAAOA,EAAM+G,wBAAyBrB,GAAE,MAAS5E,GACrE,C,+CCiBT,IA/CkB,QAAC,MACjBa,EAAK,IACLC,EAAG,OACHC,EAAM,KACNC,GACD,SACC,uBAAK9B,MAAO,CAAEqH,UAAW,UACvB,uBAAKrH,MAAO,CACVC,SAAU,WACVqH,UAXY,OAYZhD,aAAc,MACdiD,SAAU,WAEV,gBAAC,EAAA5B,EAAW,CACVhE,OAAOsB,EAAAA,EAAAA,GAAStB,GAChBC,IAAKA,IAEP,wBAAM5B,MAAO,CACXC,SAAU,WACVuG,IAAK,KACLgB,MAAO,KACPnD,MAAO,QACPO,SAAU,kBACVyC,UAAW,QACXxC,WAAY,IACZ4C,WAAY,oBACZC,gBAAiB,SACjB1D,SAAU,MACV8C,WAAY,WACZa,UAAW,aACXC,cAAe,UAGdhG,IAGL,qBAAG5B,MAAO,CAAEmE,OAAQ,EAAGQ,UAAW,EAAGC,SAAU,KAAM,SAC5C,IACP,qBACE,aAAY9C,EACZ5B,KAAM4B,GAELD,IAGD,C,wDC9CR,MAAM8B,EAAS,CACbkE,WAAY,CACV1D,OAAQ,GACRF,QAAS,GACTJ,QAAS,OACT0B,cAAe,SACfoB,WAAY,QACZmB,UAAW,yGACXxD,aAAc,IAEhByD,eAAgB,CACdxD,eAAgB,OAChBN,QAAS,GAEX+D,gBAAiB,CACfC,OAAQ,MACR1G,WAAY,GACZ2G,YAAa,IAEfC,oBAAqB,CACnBhD,YAAa,SACb8C,OAAQ,KAEVG,eAAgB,CACdC,WAAY,IAEdC,eAAgB,CACdzE,QAAS,OACTC,oBAAqB,uCACrByE,IAAK,IAEP/D,eAAgB,CACdX,QAAS,OACTY,SAAU,QAEZ+D,cAAe,CACbrE,OAAQ,EACRF,QAAS,EACTG,gBAAiB,UACjBE,aAAc,IA8FlB,IApEmB,KACjB,MAAM,EAACmE,EAAY,EAACC,IAAkBpF,EAAAA,EAAAA,UAAS,KACzC,EAACqF,EAAY,EAACC,IAAkBtF,EAAAA,EAAAA,UAAS,MACzC5C,GAAOmI,EAAAA,EAAAA,gBAzBJ,eA2BTtF,EAAAA,EAAAA,YAAU,KAER,MAAMR,EAAOS,OAAOlB,SAASpC,KAAK4I,MAAM,KAAKC,QAAOC,GAAQA,IAAMC,MAClEP,EAAe3F,EAAK,GACnB,KAEHQ,EAAAA,EAAAA,YAAU,KAER,MAAMV,EAAOnC,EAAKwI,OAAOC,MAAMC,MAAKvG,GAAQA,EAAKhC,YAAYkC,OAAS0F,IACtEG,EAAe/F,EAAK,GACnB,CAAC4F,EAAa/H,EAAKwI,OAAOC,QAE7B,MAAM,MAAEA,GAAUzI,EAAKwI,OAGvB,GAAIP,GAAeA,EAAY9H,YAAYE,KAAM,CAE/C,MAAMsI,EAAcF,EAAMJ,QAAOlG,GAC/BA,EAAKhC,YAAYkC,OAAS0F,GAC1B5F,EAAKhC,YAAYE,KAAKuI,MAAKpF,GAAOyE,EAAY9H,YAAYE,KAAKwI,SAASrF,OAIpEsF,EAAaH,EAAYI,KAAKC,OAAM,IAAIC,MAAOC,aAAe,IAAMP,EAAYlG,SAAWgG,EAAM,GAIjGU,EAAclB,EAAY9H,YAAYE,KAAKwI,SAAS,SAKxDJ,EAAMJ,QAAOlG,GACXA,EAAKhC,YAAYkC,OAAS0F,GAC1B5F,EAAKhC,YAAYkC,OAASyG,EAAW3I,YAAYkC,OAChDF,EAAKhC,YAAYE,KAAKwI,SAAS,WAPlCJ,EAAMJ,QAAOlG,GACXA,EAAKhC,YAAYkC,OAAS0F,GAC1B5F,EAAKhC,YAAYkC,OAASyG,EAAW3I,YAAYkC,MACjDF,EAAKhC,YAAYE,KAAKwI,SAAS,WAO7BO,EAAYD,EAAWJ,KAAKC,OAAM,IAAIC,MAAOC,aAAe,IAAMC,EAAW1G,SAAWgG,EAAM,GAEpG,OACE,uBAAKnJ,MAAO2D,EAAOkE,YACjB,0BACE,gBAAC,EAAApC,KAAI,CAACC,GAAI,SAAU1F,MAAO2D,EAAOoE,gBAAgB,8BAIpD,0BAAI,iBACJ,gBAAC,IAAe,CAAClF,KAAM2G,IACvB,0BAAI,0BACJ,gBAAC,IAAe,CAAC3G,KAAMiH,IAG7B,CAEE,OACE,uBAAK9J,MAAO2D,EAAOkE,YACjB,0BAAI,cAGV,C,mECwBF,IAzJwB,IAAe,IAAd,KAAE5F,GAAM,EAC/B,MAAM,MAAE8H,GAAU9H,GAAc,CAAE8H,MAAO,KACnC,EAACC,EAAK,EAACC,IAAW3G,EAAAA,EAAAA,WAAS,IAC3B,EAAC4G,EAAM,EAACC,IAAY7G,EAAAA,EAAAA,WAAS,GAW7B8G,EAAkB,CACtBvF,WAAY,KAGRwF,EAAgB,CACpBpG,QAAS,YAsBLqG,EACI,CACNjG,MAAO,UACPE,eAAgB,QAHd+F,EAKG,CACLlG,gBAAiB,mBACjBC,MAAO,WAPLiG,EASM,CACRlG,gBAAiB,UACjBC,MAAO,WAMX,OACE,gCACE,0BAAQrE,MAjCS,CACnB4E,SAAU,QACVC,WAAY,IACZ0F,OAAQ,OACRC,WAAY,sBACZlG,aAAc,gBACdT,QAAS,OACTyB,eAAgB,gBAChBqB,WAAY,SACZ1C,QAAS,kBACTE,OAAQ,EACR2D,UAAU,iDAsBqBxB,QAvDlB,KACb2D,GAASD,EAAK,GAsDkC,qBAE5C,gBAAC,IAAe,CAAChK,MANV,CAAEyK,MAAO,GAAIxC,OAAQ,IAMEyC,KAAMV,EAAOW,EAAAA,IAAcC,EAAAA,OAE1DZ,GACC,uBAAKhK,MA3CC,CACVmE,OAAQ,EACR0G,WAAY,WA0CN,sBAAI7K,MAzDQ,CAClBiE,QAAS,kBACTuG,WAAY,wBAyDFT,aAAK,EAALA,EAAOnE,KAAIkF,GACT,sBAAIjF,IAAKiF,EAAKhK,OACZ,gBAAC,EAAA2E,KAAI,CACHI,IAAKiF,EAAKhK,MACVd,MAAO,IACFsK,KACCJ,IAAUY,EAAKhK,MAAQwJ,EAAiB,MAG9C5E,GAAIoF,EAAKC,IACTC,aAAc,KACZb,EAASW,EAAKhK,MAAM,EAEtBmK,aAAc,KACZd,GAAS,EAAM,GAGjB,wBAAMnK,MAAOoK,GAAkBU,EAAKhK,QAGpCgK,EAAKf,MACH,sBAAI/J,MAAOqK,GAEPS,EAAKf,MAAMnE,KAAIvG,GACb,sBAAIwG,IAAKxG,EAAG0L,KACV,gBAAC,EAAAtF,KAAI,CACHI,IAAKxG,EAAG0L,IACRrF,GAAIrG,EAAG0L,IACPC,aAAc,KACZb,EAAS9K,EAAGyB,MAAM,EAEpBmK,aAAc,KACZd,GAAS,EAAM,EAEjBnK,MAAO,IACFsK,KACCJ,IAAU7K,EAAGyB,MAAQwJ,EAAoB,OAG9CjL,EAAGyB,OAGJzB,EAAG0K,MACD,sBAAI/J,MAAOqK,GAEPhL,EAAG0K,MAAMnE,KAAIjG,GACX,sBAAIkG,IAAKlG,EAAGoL,KACV,gBAAC,EAAAtF,KAAI,CACHI,IAAKlG,EAAGoL,IACRrF,GAAI/F,EAAGoL,IACPC,aAAc,KACZb,EAASxK,EAAGmB,MAAM,EAEpBmK,aAAc,KACZd,GAAS,EAAM,EAEjBnK,MAAO,IACFsK,KACCJ,IAAUvK,EAAGmB,MAAQwJ,EAAiB,OAG3C3K,EAAGmB,WAMZ,SAMZ,UAQjB,C,+CC3GP,IA5CiB,IAAe,IAAd,KAAEC,GAAM,EACxB,MAAM,EAACmJ,EAAM,EAACC,IAAY7G,EAAAA,EAAAA,WAAS,GAC7BtD,EACI,CACNqE,MAAO,UACPQ,WAAY,IACZN,eAAgB,QAJdvE,EAMG,CACLoE,gBAAiB,UACjBC,MAAO,WAIX,OAAO,yBAAG,QACF,IAEJtD,EAAK6E,KAAI,CAAC1B,EAAKgH,IACb,wBAAMrF,IAAK3B,GACT,gBAAC,EAAAuB,KAAI,CACHI,IAAK3B,EACLwB,GAAE,SAAWxB,EAAI4B,QAAQ,KAAM,KAAI,IACnC9F,MAAO,IACFA,KACCkK,IAAUhG,EAAMlE,EAAc,MAEpCgL,aAAc,KACZb,EAASjG,EAAI,EAEf+G,aAAc,KACZd,GAAS,EAAM,GAGhBjG,GAGDgH,IAAUnK,EAAKoC,OAAS,EAAI,iCAAQ,gCAAE,IAAE,QAK9C,C,sECXC,MAAMgI,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBvL,GAC/B,MAAMwL,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAftL,EACFA,EAAWwL,GAGb,IAAIA,KAAsBxL,IAChC,CAACwL,EAAmBxL,GACzB,C","sources":["webpack://nathan-phennel-website/./blog/seo-gatsby-sitemap-robots/index.mdx","webpack://nathan-phennel-website/./src/pages/blog/{mdx.frontmatter__slug}.js","webpack://nathan-phennel-website/./src/components/article-list-item.js","webpack://nathan-phennel-website/./src/components/back-to-top.js","webpack://nathan-phennel-website/./src/components/breadcrumbs.js","webpack://nathan-phennel-website/./src/components/hero-image.js","webpack://nathan-phennel-website/./src/components/random-post.js","webpack://nathan-phennel-website/./src/components/table-of-contents.js","webpack://nathan-phennel-website/./src/components/tag-links.js","webpack://nathan-phennel-website/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, {\n    id: \"assessing-your-current-situation\",\n    style: {\n      position: \"relative\"\n    }\n  }, \"Assessing your current situation\", React.createElement(_components.a, {\n    href: \"#assessing-your-current-situation\",\n    \"aria-label\": \"assessing your current situation permalink\",\n    className: \"anchor after\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  }))), \"\\n\", React.createElement(_components.p, null, \"Before creating a sitemap and robots.txt for your Gatsby v5 blog, you may want to check if you already have them and how they look. You can do this by visiting your website's URL followed by \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">/sitemap.xml</code>\"\n    }\n  }), \" and \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">/robots.txt</code>\"\n    }\n  }), \", respectively. For example, if your website is \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">https://example.com</code>\"\n    }\n  }), \", you can check your sitemap at \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">https://example.com/sitemap.xml</code>\"\n    }\n  }), \" and your robots.txt at \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">https://example.com/robots.txt</code>\"\n    }\n  }), \".\"), \"\\n\", React.createElement(_components.p, null, \"A sitemap is an XML file that lists all the pages on your website along with some metadata, such as when they were last modified and how often they change.\"), \"\\n\", React.createElement(_components.p, null, \"The robots.txt is a plain text file that tells search engines which pages or directories they can or cannot crawl and index.\"), \"\\n\", React.createElement(_components.p, null, \"If you don't have a sitemap or robots.txt, or if you want to improve them, you can use the following plugins to generate them automatically.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"gatsby-sitemap-plugin\",\n    style: {\n      position: \"relative\"\n    }\n  }, \"Gatsby sitemap plugin\", React.createElement(_components.a, {\n    href: \"#gatsby-sitemap-plugin\",\n    \"aria-label\": \"gatsby sitemap plugin permalink\",\n    className: \"anchor after\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  }))), \"\\n\", React.createElement(_components.p, null, \"The \", React.createElement(_components.a, {\n    href: \"https://www.gatsbyjs.com/docs/how-to/adding-common-features/creating-a-sitemap/\"\n  }, \"gatsby-plugin-sitemap\"), \" plugin is the official plugin for creating sitemaps in Gatsby. To use it, start by installing it with the following command:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"sh\\\"><pre class=\\\"language-sh\\\"><code class=\\\"language-sh\\\"><span class=\\\"token function\\\">npm</span> <span class=\\\"token function\\\">install</span> gatsby-plugin-sitemap</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"Then, you need to add it to your \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">gatsby-config.js</code>\"\n    }\n  }), \" file in the root folder of your project. You also need to specify the \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">siteUrl</code>\"\n    }\n  }), \" property in your \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">siteMetadata</code>\"\n    }\n  }), \" object, which is the base URL of your website. For example:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\">module<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token literal-property property\\\">siteMetadata</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token literal-property property\\\">siteUrl</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">https://example.com</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token literal-property property\\\">plugins</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">gatsby-plugin-sitemap</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"The plugin will generate a sitemap file (or multiple files if your site has more than 50,000 URLs) in the \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">public</code>\"\n    }\n  }), \" folder when you run \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">gatsby build</code>\"\n    }\n  }), \". By default, the sitemap URL is \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">/sitemap/sitemap-index.xml</code>\"\n    }\n  }), \", but you can change it with the \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">output</code>\"\n    }\n  }), \" option. You can also customize other aspects of the sitemap, such as the priority, changefreq, and exclude properties. See the \", React.createElement(_components.a, {\n    href: \"https://www.gatsbyjs.com/plugins/gatsby-plugin-sitemap/?=sitemap#options\"\n  }, \"plugin documentation\"), \" for more details.\"), \"\\n\", React.createElement(_components.p, null, \"Here's an example implementation:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\">\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">isCategory</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token parameter\\\">path</span> <span class=\\\"token operator\\\">=></span> \\n    path <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">\\\"/tags/\\\"</span> <span class=\\\"token operator\\\">||</span> \\n    path <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">\\\"/blog/\\\"</span> <span class=\\\"token operator\\\">||</span> \\n    path <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">\\\"/code/\\\"</span> <span class=\\\"token operator\\\">||</span> \\n    path <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">\\\"/music/\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token literal-property property\\\">resolve</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'gatsby-plugin-sitemap'</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token literal-property property\\\">options</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token literal-property property\\\">excludes</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'/tags/*'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token comment\\\">// filterpages: true means the page is excluded</span>\\n      <span class=\\\"token comment\\\">//   only category and authentic project paths are canon</span>\\n      <span class=\\\"token function-variable function\\\">filterPages</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> path <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> \\n        <span class=\\\"token operator\\\">!</span><span class=\\\"token function\\\">isCategory</span><span class=\\\"token punctuation\\\">(</span>path<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">&amp;&amp;</span> \\n        <span class=\\\"token operator\\\">!</span>fs<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">existsSync</span><span class=\\\"token punctuation\\\">(</span>Path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">join</span><span class=\\\"token punctuation\\\">(</span>__dirname<span class=\\\"token punctuation\\\">,</span> path<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token function-variable function\\\">serialize</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> path <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">const</span> result <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token literal-property property\\\">url</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>path<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token literal-property property\\\">changefreq</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"daily\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n        <span class=\\\"token comment\\\">// mark homepage as higher priority</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>path <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">\\\"/\\\"</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token operator\\\">...</span>result<span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token literal-property property\\\">priority</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">0.8</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token comment\\\">// rank higher if category path</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">isCategory</span><span class=\\\"token punctuation\\\">(</span>path<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token operator\\\">...</span>result<span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token literal-property property\\\">priority</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">0.7</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token comment\\\">// uses filterPages to only include canonicals:</span>\\n        <span class=\\\"token comment\\\">//   path is considered canonical if real filepath exists in src</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token operator\\\">...</span>result<span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token literal-property property\\\">priority</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">0.5</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, {\n    id: \"gatsby-robotstxt-plugin\",\n    style: {\n      position: \"relative\"\n    }\n  }, \"Gatsby robots.txt plugin\", React.createElement(_components.a, {\n    href: \"#gatsby-robotstxt-plugin\",\n    \"aria-label\": \"gatsby robotstxt plugin permalink\",\n    className: \"anchor after\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  }))), \"\\n\", React.createElement(_components.p, null, \"The \", React.createElement(_components.a, {\n    href: \"https://www.gatsbyjs.com/plugins/gatsby-plugin-robots-txt/\"\n  }, \"gatsby-plugin-robots-txt\"), \" plugin is a third-party plugin for creating robots.txt in Gatsby. To use it, you need to start by installing it:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"sh\\\"><pre class=\\\"language-sh\\\"><code class=\\\"language-sh\\\"><span class=\\\"token function\\\">npm</span> <span class=\\\"token function\\\">install</span> gatsby-plugin-robots-txt</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"Then, you need to add it to your \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">gatsby-config.js</code>\"\n    }\n  }), \" file in the root folder of your project. You also need to provide some options to the plugin.\"), \"\\n\", React.createElement(_components.p, null, \"The plugin will generate a robots.txt file in the \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">public</code>\"\n    }\n  }), \" folder when you run \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">gatsby build</code>\"\n    }\n  }), \". By default, the robots.txt URL is \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">/robots.txt</code>\"\n    }\n  }), \". You can also customize other aspects of the robots.txt, such as adding environment-specific rules or resolving conflicts. See the \", React.createElement(_components.a, {\n    href: \"https://www.gatsbyjs.com/plugins/gatsby-plugin-robots-txt/?=robots#options\"\n  }, \"plugin documentation\"), \" for more details.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"adding-to-your-site\",\n    style: {\n      position: \"relative\"\n    }\n  }, \"Adding to your site\", React.createElement(_components.a, {\n    href: \"#adding-to-your-site\",\n    \"aria-label\": \"adding to your site permalink\",\n    className: \"anchor after\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  }))), \"\\n\", React.createElement(_components.p, null, \"After installing and configuring both plugins, you need to run the Gatsby \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">build</code>\"\n    }\n  }), \" script. This will create a production-ready version of your site in the \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">public</code>\"\n    }\n  }), \" folder, along with the sitemap and robots.txt files. You can then deploy your site using the \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">deploy</code>\"\n    }\n  }), \" script.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"verify-on-localhost\",\n    style: {\n      position: \"relative\"\n    }\n  }, \"Verify on localhost\", React.createElement(_components.a, {\n    href: \"#verify-on-localhost\",\n    \"aria-label\": \"verify on localhost permalink\",\n    className: \"anchor after\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  }))), \"\\n\", React.createElement(_components.p, null, \"To verify that the gatsby plugins for sitemap and robots.txt are working as expected locally, you need to follow these steps:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Run \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">gatsby develop</code>\"\n    }\n  }), \" in your terminal to start a local development server. You should see a message that says \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">You can now view your site in the browser.</code>\"\n    }\n  }), \" followed by a URL such as \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">http://localhost:8000</code>\"\n    }\n  }), \".\"), \"\\n\", React.createElement(_components.li, null, \"Open a new tab in your browser and go to the URL of your local site followed by \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">/sitemap.xml</code>\"\n    }\n  }), \". For example, if your local site is \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">http://localhost:8000</code>\"\n    }\n  }), \", go to \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">http://localhost:8000/sitemap.xml</code>\"\n    }\n  }), \". You should see an XML file that lists all the pages on your site along with some metadata.\"), \"\\n\", React.createElement(_components.li, null, \"Open another tab in your browser and go to the URL of your local site followed by \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">/robots.txt</code>\"\n    }\n  }), \". For example, if your local site is \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">http://localhost:8000</code>\"\n    }\n  }), \", go to \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">http://localhost:8000/robots.txt</code>\"\n    }\n  }), \". You should see a plain text file that tells web crawlers which pages or directories they can or cannot crawl and index. You should also see a line that points to your sitemap file, such as \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Sitemap: http://localhost:8000/sitemap.xml</code>\"\n    }\n  }), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"verify-live-site\",\n    style: {\n      position: \"relative\"\n    }\n  }, \"Verify live site\", React.createElement(_components.a, {\n    href: \"#verify-live-site\",\n    \"aria-label\": \"verify live site permalink\",\n    className: \"anchor after\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  }))), \"\\n\", React.createElement(_components.p, null, \"In addition to checking the file now exists on your live site, as we did on \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">localhost</code>\"\n    }\n  }), \", you can go further and look into how Google is handling things.\"), \"\\n\", React.createElement(_components.p, null, \"Verify your site with \", React.createElement(_components.a, {\n    href: \"https://search.google.com\"\n  }, \"Google Search Console\"), \" by starting \", React.createElement(_components.a, {\n    href: \"https://support.google.com/webmasters/topic/9455938?hl=en&ref_topic=4558844\"\n  }, \"here\"), \". After verifying your site, you can check the following things in Search Console related to robots.txt and sitemaps:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Check if Google has discovered and indexed your sitemap in the Sitemaps report. You can also see the number of URLs submitted and indexed, and any errors or warnings that Google encountered when processing your sitemap.\"), \"\\n\", React.createElement(_components.li, null, \"See if Google has encountered any issues when crawling or indexing your site in the Coverage report. You can also see the status of each URL on your site, such as whether it's valid, excluded, or has errors or warnings.\"), \"\\n\", React.createElement(_components.li, null, \"Determine if Google has detected any manual actions or security issues on your site in the Manual Actions and Security Issues reports. These can affect how your site appears in search results and may require you to take action to fix them.\"), \"\\n\", React.createElement(_components.li, null, \"Review how your site performs in Google Search in the Performance report. You can see metrics such as impressions, clicks, click-through rate, and average position for your site's pages and queries. You can also filter and compare data by various dimensions, such as device, country, page, or search appearance.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Next, let's look at each of the new files.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"verify-live-sitemap\",\n    style: {\n      position: \"relative\"\n    }\n  }, \"Verify live sitemap\", React.createElement(_components.a, {\n    href: \"#verify-live-sitemap\",\n    \"aria-label\": \"verify live sitemap permalink\",\n    className: \"anchor after\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  }))), \"\\n\", React.createElement(_components.p, null, \"Submit your sitemap to Google using the Sitemaps report in Search Console. You can also use the Search Console API or the ping tool to submit your sitemap. See \", React.createElement(_components.a, {\n    href: \"https://developers.google.com/search/docs/crawling-indexing/sitemaps/build-sitemap\"\n  }, \"this guide\"), \" for more details.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"verify-live-robotstxt\",\n    style: {\n      position: \"relative\"\n    }\n  }, \"Verify live robots.txt\", React.createElement(_components.a, {\n    href: \"#verify-live-robotstxt\",\n    \"aria-label\": \"verify live robotstxt permalink\",\n    className: \"anchor after\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  }))), \"\\n\", React.createElement(_components.p, null, \"Test your robots.txt file with the robots.txt Tester tool in Search Console. You can also use the URL Inspection tool to see how Googlebot crawls a specific URL on your site. See \", React.createElement(_components.a, {\n    href: \"https://support.google.com/webmasters/answer/6062598?hl=en\"\n  }, \"this help page\"), \" for more information.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/nathanphennel/Projects/code/enphnt.github.io/blog/seo-gatsby-sitemap-robots/index.mdx\";\nimport * as React from 'react';\nimport {graphql} from 'gatsby';\nimport Layout from '../../components/layout';\nimport Seo from '../../components/seo';\nimport TagLinks from '../../components/tag-links';\nimport TableOfContents from '../../components/table-of-contents';\nimport RandomPost from '../../components/random-post';\nimport Breadcrumbs from '../../components/breadcrumbs';\nimport BackToTop from '../../components/back-to-top';\nimport HeroImage from '../../components/hero-image';\nconst BlogPost = ({data, children}) => {\n  const {mdx: {frontmatter: {title, tags, date, hero_image, hero_image_alt, hero_image_credit_link, hero_image_credit_text}, tableOfContents}} = data;\n  return React.createElement(Layout, null, React.createElement(\"div\", {\n    style: {\n      paddingTop: 20\n    }\n  }, React.createElement(Breadcrumbs, {\n    title: title,\n    path: \"blog\"\n  }), hero_image && React.createElement(HeroImage, {\n    image: hero_image,\n    alt: hero_image_alt,\n    credit: hero_image_credit_text,\n    link: hero_image_credit_link\n  }), React.createElement(\"h1\", null, title), React.createElement(TagLinks, {\n    tags: tags\n  }), React.createElement(\"h5\", null, date), React.createElement(\"br\"), React.createElement(TableOfContents, {\n    tocs: tableOfContents\n  }), React.createElement(BackToTop), React.createElement(\"div\", null, children), React.createElement(\"br\"), React.createElement(RandomPost)));\n};\nexport const query = graphql`\n  query ($id: String) {\n    mdx(id: {eq: $id}) {\n      tableOfContents\n      excerpt(pruneLength: 200)\n      frontmatter {\n        title\n        tags\n        slug\n        date(formatString: \"MMMM DD, YYYY\")\n        hero_image_alt\n        hero_image_credit_link\n        hero_image_credit_text\n        hero_image {\n          childImageSharp {\n            gatsbyImageData\n          }\n        }\n      }\n    }\n  }\n`;\nexport const Head = ({location, data}) => React.createElement(Seo, {\n  location: location,\n  title: data.mdx.frontmatter.title,\n  hero_image: data.mdx.frontmatter.hero_image,\n  excerpt: data.mdx.excerpt\n});\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'gatsby';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\n\nconst lightColors = [\n  \"lightblue\", \"lightcoral\", \"lightcyan\", \"lightgoldenrodyellow\",\n  \"lightgreen\", \"lightpink\", \"lightsalmon\", \"lightseagreen\",\n  \"lightskyblue\", \"lightgray\"\n];\n\nconst ArticleListItem = ({ idx, node: { id, frontmatter: { thumbnail, slug, title, date, tags }, excerpt } }) => {\n  const thumb = getImage(thumbnail);\n  const fancyColor = lightColors[idx % lightColors.length];\n  const [mobileGrid, setMobileGrid] = useState();\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => {\n      setMobileGrid(\"span 1\");\n      if (window.innerWidth <= 768) {\n        setMobileGrid(\"span 2\");\n      }\n    });\n  }, []);\n\n  const styles = {\n    article: {\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(auto-fit, minmax(200px, 1fr))\",\n      gridGap: \"1em\",\n      maxWidth: \"99%\",\n      padding: \"1em\",\n    },\n    tag: {\n      padding: 4,\n      margin: \"4px\",\n      backgroundColor: \"#e0e0e0\",\n      color: \"inherit\",\n      borderRadius: \"4px\",\n      textDecoration: \"none\",\n    },\n    blogFooterTags: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    heading: {\n      marginTop: 0,\n      fontSize: \"1.3em\",\n      fontWeight: 600,\n      textDecorationLine: \"underline\",\n      textDecorationStyle: \"solid\",\n      textDecorationColor: fancyColor,\n      textDecorationThickness: 1,\n      maxWidth: \"max-content\",\n    },\n    thumbnailWrapper: {\n      margin: \"0.35em 0 0 0\",\n      justifySelf: \"center\",\n      gridColumn: mobileGrid,\n      maxWidth: 230,\n    },\n    info: {\n      gridColumn: \"span 2\",\n      justifyContent: \"space-around\",\n      display: \"flex\",\n      flexDirection: \"column\",\n    },\n    hr: {\n      color: fancyColor,\n      margin: 0,\n    }\n  };\n\n  return (\n    <div>\n      <hr style={styles.hr} />\n      <article style={styles.article}>\n        <div style={styles.thumbnailWrapper}>\n          <Link id=\"nohighlight\" aria-label={`Read more about ${title}`} to={`/blog/${slug}/`}>\n            <GatsbyImage\n              image={thumb}\n              alt={`Thumbnail for ${title}`}\n            />\n          </Link>\n        </div>\n        <div style={styles.info}>\n          <Link aria-label={`Read more about ${title}`} to={`/blog/${slug}/`} style={styles.heading}>\n            {title}\n          </Link>\n          <h5>{date}</h5>\n          <p>{excerpt}</p>\n          <div style={styles.blogFooterTags}>\n            {tags.map(tag => (\n              <Link key={tag} to={`/tags/${tag.replace(/ /g, \"-\")}/`} style={styles.tag}>\n                {tag}\n              </Link>\n            ))}\n          </div>\n        </div>\n      </article>\n    </div>\n  );\n};\n\nexport default ArticleListItem;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst BackToTopButton = styled.button`\n  position: fixed;\n  bottom: calc(12% - 30px);\n  right: 0;\n  z-index: 2;\n  font-size: 18px;\n  border: none;\n  outline: none;\n  background-color: white !important;\n  color: black;\n  cursor: pointer;\n  padding: 0;\n  width: 60px;\n  height: 60px;\n  border-radius: 4px;\n  box-shadow: 0px 2px 4px rgba(0,0,0,0.2);\n  white-space: nowrap;\n`;\n\nconst BackToTop = () => {\n  const [showButton, setShowButton] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      if (window.pageYOffset > 1000) {\n        setShowButton(true);\n      } else {\n        setShowButton(false);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  const scrollToTop = () => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  return showButton ? (\n    <BackToTopButton onClick={scrollToTop}>\n      <span>↑</span>\n    </BackToTopButton>\n  ) : null;\n};\n\nexport default BackToTop;","import { Link } from 'gatsby';\nimport * as React from 'react';\n\nconst style = {\n  breadcrumbs: {\n    display: \"flex\",\n    alignItems: \"baseline\",\n    margin: 4,\n    fontSize: \"max(.85vw, .9em)\",\n  },\n  breadcrumbLink: {\n    paddingRight: 2,\n    whiteSpace: \"nowrap\",\n    textDecoration: \"none\"\n  },\n  breadcrumbLinkHighlight: {\n    fontWeight: 600,\n    textDecoration: \"none\"\n  },\n  breadcrumbLinkSeparator: {\n    fontSize: \".75em\",\n    fontWeight: 600,\n    margin: 3,\n    paddingBottom: 4,\n    color: \"rgb(46, 107, 77)\",\n  },\n};\n\nconst Breadcrumbs = ({ title, path }) => (\n  <div style={style.breadcrumbs}>\n    <Link aria-label=\"Home\" style={style.breadcrumbLink} to=\"/\">{'< '}Home</Link>\n    <div style={style.breadcrumbLinkSeparator}>/</div>\n    <Link aria-label={path} style={style.breadcrumbLink} to={`/${path}/`}>{path.charAt(0).toUpperCase() + path.slice(1)}</Link>\n    <div style={style.breadcrumbLinkSeparator}>/</div>\n    <Link aria-label={title} style={style.breadcrumbLinkHighlight} to={`./`}>{title}</Link>\n  </div >\n);\n\nexport default Breadcrumbs;","import * as React from \"react\";\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\n\nconst maxHeight = \"45vh\";\n\nconst HeroImage = ({\n  image,\n  alt,\n  credit,\n  link,\n}) =>\n  <div style={{ textAlign: \"right\" }}>\n    <div style={{\n      position: \"relative\",\n      maxHeight: maxHeight,\n      borderRadius: \"5px\",\n      overflow: \"hidden\",\n    }}>\n      <GatsbyImage\n        image={getImage(image)}\n        alt={alt}\n      />\n      <span style={{\n        position: \"absolute\",\n        top: \"4%\",\n        right: \"4%\",\n        color: \"white\",\n        fontSize: \"max(3vh, 2.3vw)\",\n        textAlign: \"right\",\n        fontWeight: 600,\n        textShadow: \"0px 1px 8px black\",\n        transformOrigin: \"bottom\",\n        maxWidth: \"80%\",\n        whiteSpace: \"pre-wrap\",\n        wordBreak: \"break-word\",\n        letterSpacing: \".2rem\",\n      }}>\n        {/* Use the alt as the overlay text */}\n        {alt}\n      </span>\n    </div>\n    <p style={{ margin: 0, marginTop: 2, fontSize: 12 }}>\n      Image:{\" \"}\n      <a\n        aria-label={link}\n        href={link}\n      >\n        {credit}\n      </a>\n    </p>\n  </div>;\n\nexport default HeroImage;","import React, { useState, useEffect } from \"react\";\nimport { Link, useStaticQuery, graphql } from \"gatsby\";\nimport ArticleListItem from \"./article-list-item\";\n\nconst styles = {\n  blogFooter: {\n    margin: 16,\n    padding: 16,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"start\",\n    boxShadow: \"0px 3px 5px -1px rgba(0,0,0,0.2), 0px 6px 10px 0px rgba(0,0,0,0.14), 0px 1px 18px 0px rgba(0,0,0,0.12)\",\n    borderRadius: 10,\n  },\n  blogFooterLink: {\n    textDecoration: \"none\",\n    padding: 4\n  },\n  blogFooterImage: {\n    height: \"90%\",\n    paddingTop: 10,\n    marginRight: 20,\n  },\n  blogFooterImageWrap: {\n    justifySelf: \"center\",\n    height: 200,\n  },\n  blogFooterInfo: {\n    marginLeft: 16,\n  },\n  blogFooterGrid: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fit, minmax(300px, 1fr))\",\n    gap: 16,\n  },\n  blogFooterTags: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  blogFooterTag: {\n    margin: 4,\n    padding: 4,\n    backgroundColor: \"#e0e0e0\",\n    borderRadius: 4,\n  },\n};\n\nconst query = graphql`\n  query {\n    allMdx {\n      nodes {\n        excerpt(pruneLength: 200)\n        frontmatter {\n          date(formatString: \"MMMM D, YYYY\")\n          title\n          slug\n          tags\n          thumbnail {\n            childImageSharp {\n              gatsbyImageData\n            }\n          }\n        }\n        id\n      }\n    }\n  }\n`;\n\nconst RandomBlog = () => {\n  const [currentSlug, setCurrentSlug] = useState(\"\");\n  const [currentNode, setCurrentNode] = useState(null);\n  const data = useStaticQuery(query);\n\n  useEffect(() => {\n    // Get the last part of the url without slashes\n    const slug = window.location.href.split(\"/\").filter(part => part).pop();\n    setCurrentSlug(slug);\n  }, []);\n\n  useEffect(() => {\n    // Find the node that matches the current slug\n    const node = data.allMdx.nodes.find(node => node.frontmatter.slug === currentSlug);\n    setCurrentNode(node);\n  }, [currentSlug, data.allMdx.nodes]);\n\n  const { nodes } = data.allMdx;\n\n  // Check if the current node exists and has tags\n  if (currentNode && currentNode.frontmatter.tags) {\n    // Filter so only nodes that share a tag with the current node and not current\n    const taggedNodes = nodes.filter(node =>\n      node.frontmatter.slug !== currentSlug &&\n      node.frontmatter.tags.some(tag => currentNode.frontmatter.tags.includes(tag))\n    );\n\n    // Choose a random node from the tagged nodes every 10 mins, fallback if none\n    const taggedNode = taggedNodes[Math.floor(new Date().getMinutes() / 10) % taggedNodes.length] || nodes[0];\n\n    // Filter out nodes whose slug matches the current or tagged slug\n    // and if current tags dont have music, show music posts, and vice versa\n    const otherNodes = !currentNode.frontmatter.tags.includes(\"music\") ?\n      nodes.filter(node =>\n        node.frontmatter.slug !== currentSlug &&\n        node.frontmatter.slug !== taggedNode.frontmatter.slug &&\n        node.frontmatter.tags.includes(\"music\")) :\n      nodes.filter(node =>\n        node.frontmatter.slug !== currentSlug &&\n        node.frontmatter.slug !== taggedNode.frontmatter.slug &&\n        !node.frontmatter.tags.includes(\"music\"));\n\n    // Choose a random node from the remaining nodes every 10 mins, fallback if none\n    const otherNode = otherNodes[Math.floor(new Date().getMinutes() / 10) % otherNodes.length] || nodes[1];\n\n    return (\n      <div style={styles.blogFooter}>\n        <h3>\n          <Link to={\"/blog/\"} style={styles.blogFooterLink}>\n            Check out other articles:\n          </Link>\n        </h3>\n        <h5>Similar tags:</h5>\n        <ArticleListItem node={taggedNode} />\n        <h5>Maybe something else: </h5>\n        <ArticleListItem node={otherNode} />\n      </div>\n    );\n  } else {\n    // If the current node does not exist or has no tags, return a loading message\n    return (\n      <div style={styles.blogFooter}>\n        <h3>Loading...</h3>\n      </div>\n    );\n  }\n};\n\nexport default RandomBlog;","import React, { useState } from 'react';\nimport { Link } from 'gatsby';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronDown, faChevronUp } from \"@fortawesome/free-solid-svg-icons\";\n\nconst TableOfContents = ({ tocs }) => {\n  const { items } = tocs ? tocs : { items: [] };\n  const [open, setOpen] = useState(false);\n  const [hover, setHover] = useState(false);\n\n  const toggle = () => {\n    setOpen(!open);\n  };\n\n  const orderedList = {\n    padding: \"8px 2.5rem 16px\",\n    borderLeft: \"solid 5px lightgrey\",\n  };\n\n  const orderedListItem = {\n    fontWeight: 600,\n  };\n\n  const unorderedList = {\n    padding: \"0 1.6rem\",\n  };\n\n  const toc = {\n    margin: 0,\n    lineHeight: \"1.75em\",\n  };\n\n  const toggleButton = {\n    fontSize: \"1.1em\",\n    fontWeight: 300,\n    border: \"none\",\n    borderLeft: \"solid 5px lightgrey\",\n    borderRadius: \"0 23px 23px 0\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: \"0 1.5rem 0 1rem\",\n    margin: 0,\n    boxShadow: `5px 5px 95px rgba(183, 183, 183, 0.335) inset`\n  };\n\n  const itemLink = {\n    normal: {\n      color: \"#35435d\",\n      textDecoration: \"none\"\n    },\n    hover: {\n      backgroundColor: \"rgb(46, 107, 77)\",\n      color: \"#ffffff\",\n    },\n    subHover: {\n      backgroundColor: \"#35435d\",\n      color: \"#ffffff\",\n    }\n  };\n\n  const icon = { width: 32, height: 32, };\n\n  return (\n    <>\n      <button style={toggleButton} onClick={toggle}>\n        Table of Contents:\n        <FontAwesomeIcon style={icon} icon={open ? faChevronUp : faChevronDown} />\n      </button>\n      {open &&\n        <div style={toc}>\n          <ol style={orderedList}>\n            {\n              items?.map(item =>\n                <li key={item.title}>\n                  <Link\n                    key={item.title}\n                    style={{\n                      ...itemLink.normal,\n                      ...(hover === item.title ? itemLink.hover : null)\n                    }}\n\n                    to={item.url}\n                    onMouseEnter={() => {\n                      setHover(item.title);\n                    }}\n                    onMouseLeave={() => {\n                      setHover(false);\n                    }}\n                  >\n                    <span style={orderedListItem}>{item.title}</span>\n                  </Link>\n                  {\n                    item.items ?\n                      <ul style={unorderedList}>\n                        {\n                          item.items.map(h2 =>\n                            <li key={h2.url}>\n                              <Link\n                                key={h2.url}\n                                to={h2.url}\n                                onMouseEnter={() => {\n                                  setHover(h2.title);\n                                }}\n                                onMouseLeave={() => {\n                                  setHover(false);\n                                }}\n                                style={{\n                                  ...itemLink.normal,\n                                  ...(hover === h2.title ? itemLink.subHover : null)\n                                }}\n                              >\n                                {h2.title}\n                              </Link>\n                              {\n                                h2.items ?\n                                  <ul style={unorderedList}>\n                                    {\n                                      h2.items.map(h3 =>\n                                        <li key={h3.url}>\n                                          <Link\n                                            key={h3.url}\n                                            to={h3.url}\n                                            onMouseEnter={() => {\n                                              setHover(h3.title);\n                                            }}\n                                            onMouseLeave={() => {\n                                              setHover(false);\n                                            }}\n                                            style={{\n                                              ...itemLink.normal,\n                                              ...(hover === h3.title ? itemLink.hover : null)\n                                            }}\n                                          >\n                                            {h3.title}\n                                          </Link>\n                                        </li>\n                                      )\n                                    }\n                                  </ul>\n                                  : null\n                              }\n                            </li>\n                          )\n                        }\n                      </ul>\n                      : null\n                  }\n                </li>\n              )\n            }\n          </ol>\n        </div>\n      }\n    </>\n  );\n};\n\nexport default TableOfContents;\n","import React, { useState } from 'react';\nimport { Link } from 'gatsby';\n\nconst TagLinks = ({ tags }) => {\n  const [hover, setHover] = useState(false);\n  const style = {\n    normal: {\n      color: \"#35435d\",\n      fontWeight: 600,\n      textDecoration: \"none\",\n    },\n    hover: {\n      backgroundColor: \"#35435d\",\n      color: \"#ffffff\"\n    }\n  };\n\n  return <p>\n    Tags:{\" \"}\n    {\n      tags.map((tag, index) =>\n        <span key={tag}>\n          <Link\n            key={tag}\n            to={`/tags/${tag.replace(/ /g, \"-\")}/`}\n            style={{\n              ...style.normal,\n              ...(hover === tag ? style.hover : null)\n            }}\n            onMouseEnter={() => {\n              setHover(tag);\n            }}\n            onMouseLeave={() => {\n              setHover(false);\n            }}\n          >\n            {tag}\n          </Link>\n          {\n            index === tags.length - 1 ? <></> : <>,{\" \"}</>\n          }\n        </span>\n      )\n    }\n  </p>;\n};\n\nexport default TagLinks;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","a","span","p","ul","li","h3","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","BlogPost","_ref","data","children","mdx","frontmatter","title","tags","date","hero_image","hero_image_alt","hero_image_credit_link","hero_image_credit_text","tableOfContents","Layout","paddingTop","Breadcrumbs","path","HeroImage","image","alt","credit","link","TagLinks","TableOfContents","tocs","BackToTop","RandomPost","Head","_ref2","location","Seo","excerpt","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","lightColors","idx","node","thumbnail","slug","thumb","getImage","fancyColor","length","mobileGrid","setMobileGrid","useState","useEffect","window","addEventListener","innerWidth","styles","article","display","gridTemplateColumns","gridGap","maxWidth","padding","tag","margin","backgroundColor","color","borderRadius","textDecoration","blogFooterTags","flexWrap","heading","marginTop","fontSize","fontWeight","textDecorationLine","textDecorationStyle","textDecorationColor","textDecorationThickness","thumbnailWrapper","justifySelf","gridColumn","info","justifyContent","flexDirection","hr","Link","to","G","map","key","replace","BackToTopButton","styled","showButton","setShowButton","handleScroll","pageYOffset","removeEventListener","onClick","scrollTo","top","behavior","breadcrumbs","alignItems","breadcrumbLink","paddingRight","whiteSpace","breadcrumbLinkHighlight","breadcrumbLinkSeparator","paddingBottom","charAt","toUpperCase","slice","textAlign","maxHeight","overflow","right","textShadow","transformOrigin","wordBreak","letterSpacing","blogFooter","boxShadow","blogFooterLink","blogFooterImage","height","marginRight","blogFooterImageWrap","blogFooterInfo","marginLeft","blogFooterGrid","gap","blogFooterTag","currentSlug","setCurrentSlug","currentNode","setCurrentNode","useStaticQuery","split","filter","part","pop","allMdx","nodes","find","taggedNodes","some","includes","taggedNode","Math","floor","Date","getMinutes","otherNodes","otherNode","items","open","setOpen","hover","setHover","orderedListItem","unorderedList","itemLink","border","borderLeft","width","icon","faChevronUp","faChevronDown","lineHeight","item","url","onMouseEnter","onMouseLeave","index","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}