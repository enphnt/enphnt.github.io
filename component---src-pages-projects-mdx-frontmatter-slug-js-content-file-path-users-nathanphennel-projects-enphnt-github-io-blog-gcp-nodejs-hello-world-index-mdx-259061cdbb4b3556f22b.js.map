{"version":3,"file":"component---src-pages-projects-mdx-frontmatter-slug-js-content-file-path-users-nathanphennel-projects-enphnt-github-io-blog-gcp-nodejs-hello-world-index-mdx-259061cdbb4b3556f22b.js","mappings":"iRAUA,MAAMA,EAAWC,IAAsB,IAArB,KAACC,EAAI,SAAEC,GAAS,EAChC,MAAOC,KAAMC,aAAa,MAACC,EAAK,KAAEC,EAAI,KAAEC,EAAI,KAAEC,EAAI,WAAEC,EAAU,eAAEC,EAAc,uBAAEC,EAAsB,uBAAEC,GAAuB,QAAEC,EAAO,gBAAEC,IAAoBb,EACxJc,GAAYC,EAAAA,EAAAA,GAASP,GAC3B,OAAOQ,EAAAA,cAAoB,MAAO,CAChCC,MAAO,CACLC,OAAQ,GACRC,WAAY,KAEbH,EAAAA,cAAoBI,EAAAA,EAAQ,KAAMJ,EAAAA,cAAoBK,EAAAA,EAAa,CACpEjB,MAAOA,EACPkB,KAAM,aACJR,EAAYE,EAAAA,cAAoB,MAAO,CACzCC,MAAO,CACLM,UAAW,UAEZP,EAAAA,cAAoBQ,EAAAA,EAAa,CAClCC,MAAOX,EACPY,IAAKjB,EACLQ,MAAO,CACLU,YAAa,KAEbX,EAAAA,cAAoB,IAAK,KAAM,SAAU,IAAKA,EAAAA,cAAoB,IAAK,CACzEY,KAAMlB,GACLC,KAA4B,KAAMK,EAAAA,cAAoB,KAAM,KAAMZ,GAAQY,EAAAA,cAAoBa,EAAAA,EAAU,CACzGxB,KAAMA,IACJW,EAAAA,cAAoB,KAAM,KAAMV,GAAOU,EAAAA,cAAoB,MAAOA,EAAAA,cAAoBc,EAAAA,EAAiB,CACzGC,KAAMlB,IACJG,EAAAA,cAAoB,MAAOA,EAAAA,cAAoB,MAAO,KAAMf,GAAWe,EAAAA,cAAoB,MAAOA,EAAAA,cAAoBgB,EAAAA,IAAiBhB,EAAAA,cAAoBiB,EAAAA,EAAK,CAClK7B,MAAOA,EACPQ,QAASA,EACTL,KAAMA,EACNC,WAAYA,IACX,EAyBU,SAAS0B,EAAiBC,GACvC,OAAOnB,EAAAA,cAAoBlB,EAAUqC,EAAOnB,EAAAA,cAAoBoB,EAAAA,EAAqBD,GACvF,C,yDClCA,IATsB,KAEpB,MAAMnC,GAAOqC,EAAAA,EAAAA,gBAxBJ,cA0BT,OACE,gBAAC,IAAU,CAACrC,KAAMA,EAAMsC,GAAG,cAAe,C","sources":["webpack://nathan-phennel-website/./src/pages/projects/{mdx.frontmatter__slug}.js","webpack://nathan-phennel-website/./src/components/random-post/project.js"],"sourcesContent":["import GATSBY_COMPILED_MDX from \"/Users/nathanphennel/Projects/enphnt.github.io/blog/gcp-nodejs-hello-world/index.mdx\";\nimport * as React from 'react';\nimport {graphql} from 'gatsby';\nimport {GatsbyImage, getImage} from 'gatsby-plugin-image';\nimport Layout from '../../components/layout';\nimport Seo from '../../components/seo';\nimport TagLinks from '../../components/tag-links';\nimport TableOfContents from '../../components/table-of-contents';\nimport RandomProject from '../../components/random-post/project';\nimport Breadcrumbs from '../../components/breadcrumbs';\nconst Projects = ({data, children}) => {\n  const {mdx: {frontmatter: {title, tags, date, slug, hero_image, hero_image_alt, hero_image_credit_link, hero_image_credit_text}, excerpt, tableOfContents}} = data;\n  const heroImage = getImage(hero_image);\n  return React.createElement(\"div\", {\n    style: {\n      margin: 12,\n      paddingTop: 20\n    }\n  }, React.createElement(Layout, null, React.createElement(Breadcrumbs, {\n    title: title,\n    path: \"projects\"\n  }), heroImage ? React.createElement(\"div\", {\n    style: {\n      textAlign: \"right\"\n    }\n  }, React.createElement(GatsbyImage, {\n    image: heroImage,\n    alt: hero_image_alt,\n    style: {\n      boderRadius: 6\n    }\n  }), React.createElement(\"p\", null, \"Photo:\", \" \", React.createElement(\"a\", {\n    href: hero_image_credit_link\n  }, hero_image_credit_text))) : null, React.createElement(\"h1\", null, title), React.createElement(TagLinks, {\n    tags: tags\n  }), React.createElement(\"h5\", null, date), React.createElement(\"br\"), React.createElement(TableOfContents, {\n    tocs: tableOfContents\n  }), React.createElement(\"br\"), React.createElement(\"div\", null, children), React.createElement(\"br\"), React.createElement(RandomProject)), React.createElement(Seo, {\n    title: title,\n    excerpt: excerpt,\n    slug: slug,\n    hero_image: hero_image\n  }));\n};\nexport const query = graphql`\n  query($id: String) {\n    mdx(id: {eq: $id}) {\n      tableOfContents\n      excerpt(pruneLength: 200)\n      frontmatter {\n        title\n        tags\n        slug\n        date(formatString: \"MMMM DD, YYYY\")\n        hero_image_alt\n        hero_image_credit_link\n        hero_image_credit_text\n        hero_image {\n          childImageSharp {\n            gatsbyImageData\n          }\n        }\n      }\n    }\n  }\n`;\nProjects\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Projects, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import { graphql, useStaticQuery } from \"gatsby\";\nimport React from \"react\";\nimport RandomPost from \"./\";\n\nconst query = graphql`\n  query {\n    allMdx(filter: { internal: { contentFilePath: { regex: \"/projects/\" } } }) {\n      nodes {\n        excerpt(pruneLength: 200)\n        frontmatter {\n          date(formatString: \"MMMM D, YYYY\")\n          title\n          slug\n          tags\n          thumbnail {\n            childImageSharp {\n              gatsbyImageData\n            }\n          }\n        }\n        id\n      }\n    }\n  }\n`;\n\nconst RandomProject = () => {\n  // use the useStaticQuery hook to execute the query and get the data\n  const data = useStaticQuery(query);\n\n  return (\n    <RandomPost data={data} to=\"/projects/\" />\n  );\n};\n\nexport default RandomProject;"],"names":["Projects","_ref","data","children","mdx","frontmatter","title","tags","date","slug","hero_image","hero_image_alt","hero_image_credit_link","hero_image_credit_text","excerpt","tableOfContents","heroImage","getImage","React","style","margin","paddingTop","Layout","Breadcrumbs","path","textAlign","GatsbyImage","image","alt","boderRadius","href","TagLinks","TableOfContents","tocs","RandomProject","Seo","GatsbyMDXWrapper","props","GATSBY_COMPILED_MDX","useStaticQuery","to"],"sourceRoot":""}